{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, changeWheelSet } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation } from \"./tools_get_wheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      changeWheelSet(_this.state.setID, _this.state.variant, _this.state.orderduration, _this.state.term1);\n      AsyncStorage.setItem('orderSetID', _this.state.setID);\n\n      _this.refresh_Buttons();\n    };\n\n    _this.handleSubmitButton1 = function (event) {\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Cold\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[0][0] = helper[0][0] - 1;\n\n      _this.setState({\n        setID: helper[0][0]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton2 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Medium\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[1][0] = helper[1][0] - 1;\n\n      _this.setState({\n        setID: helper[1][1][helper[1][0]]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton3 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Slicks\"\n      });\n\n      _this.setState({\n        tyremix: \"Hot\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[2][0] = helper[2][0] - 1;\n      var index = helper[2][0];\n\n      _this.setState({\n        setID: helper[2][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton4 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Inters\"\n      });\n\n      _this.setState({\n        tyremix: \"Intermediate\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[3][0] = helper[3][0] - 1;\n      var index = helper[3][0];\n\n      _this.setState({\n        setID: helper[3][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton5 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Dry Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[4][0] = helper[4][0] - 1;\n      var index = helper[4][0];\n\n      _this.setState({\n        setID: helper[4][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.handleSubmitButton6 = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        tyretype: \"Rain\"\n      });\n\n      _this.setState({\n        tyremix: \"Heavy Wet\"\n      });\n\n      var helper = _this.state.dictButtons;\n      helper[5][0] = helper[5][0] - 1;\n      var index = helper[5][0];\n\n      _this.setState({\n        setID: helper[5][1][index]\n      });\n\n      _this.setState({\n        dictButtons: helper\n      });\n    };\n\n    _this.state = {\n      wheels: [],\n      dictButtons: [],\n      ButtonSlicks_Cold: 'Slicks Cold',\n      ButtonSlicks_Medium: 'Slicks Medium',\n      ButtonSlicks_Hot: 'Slicks Hot',\n      ButtonInter: 'Inters Intermediate',\n      ButtonRainDryWet: 'Rain DryWet',\n      ButtonRainHeavy: 'Rain HeavyWet',\n      ButtonsList: ['Slicks Cold', 'Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet']\n    };\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              console.log(raceID);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(this.getWheelDict());\n\n            case 9:\n              console.log(this.state.dictButtons);\n              this.refresh_Buttons();\n              _context.next = 13;\n              return _regeneratorRuntime.awrap(this.getWheelData());\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelDict\",\n    value: function getWheelDict() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelDict$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              console.log(raceID);\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(get_Dict_WheelOrder(accesstoken, raceID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this2.setState({\n                  dictButtons: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.dictButtons);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"refresh_Buttons\",\n    value: function refresh_Buttons() {\n      if (this.state.dictButtons.length == 6) {\n        this.setState({\n          ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()\n        });\n        this.setState({\n          ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()\n        });\n        this.setState({\n          ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()\n        });\n        this.setState({\n          ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()\n        });\n        this.setState({\n          ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()\n        });\n      }\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.term1.length > 0 && this.state.orderduration > 0 && this.state.variant.length > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"validateFormButton1\",\n    value: function validateFormButton1() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[0][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton2\",\n    value: function validateFormButton2() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[1][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton3\",\n    value: function validateFormButton3() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[2][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton4\",\n    value: function validateFormButton4() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[3][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton5\",\n    value: function validateFormButton5() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[4][0] > 0;\n    }\n  }, {\n    key: \"validateFormButton6\",\n    value: function validateFormButton6() {\n      return this.state.dictButtons.length == 6 && this.state.dictButtons[5][0] > 0;\n    }\n  }, {\n    key: \"getWheelData\",\n    value: function getWheelData() {\n      var _this3 = this;\n\n      var accesstoken, setID;\n      return _regeneratorRuntime.async(function getWheelData$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('orderSetID'));\n\n            case 5:\n              setID = _context3.sent;\n              console.log(setID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(getWheelSetInformation(accesstoken, setID).then(function (DataTabular) {\n                console.log(DataTabular);\n\n                _this3.setState({\n                  SetInformation: DataTabular\n                });\n\n                _this3.setState({\n                  wheels: [_this3.state.SetInformation]\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 9:\n              console.log(this.state.wheels);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderWheelTable\",\n    value: function renderWheelTable() {\n      return this.state.wheels.map(function (wheel) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            textAlign: \"center\",\n            padding: '8px',\n            color: 'black',\n            fontFamily: 'arial'\n          },\n          key: 'irgendwas'\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.setNr, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.status, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.cat, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.subcat,\n          placeholder: wheel.subcat,\n          value: wheel.subcat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.setid,\n          placeholder: 'Temperatur',\n          value: wheel.temp\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          placeholder: 'FL Luftdruck',\n          value: wheel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          placeholder: 'FR Luftdruck',\n          value: wheel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          placeholder: 'BL Luftdruck',\n          value: wheel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.br_id,\n          placeholder: 'BR Luftdruck',\n          value: wheel.br_pressure\n        })));\n      });\n    }\n  }, {\n    key: \"renderWheelOrder\",\n    value: function renderWheelOrder() {\n      return this.state.wheels.map(function (wheel) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            textAlign: \"center\",\n            padding: '8px',\n            color: 'black',\n            fontFamily: 'arial'\n          },\n          key: 'irgendwas'\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.setNr, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.status, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, \" \", wheel.cat, \" \"), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.subcat,\n          placeholder: wheel.subcat,\n          value: wheel.subcat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.setid,\n          placeholder: 'Temperatur',\n          value: wheel.temp\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 25,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          }\n        }, React.createElement(\"input\", {\n          id: wheel.fl_id,\n          placeholder: 'FL Luftdruck',\n          value: wheel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.fr_id,\n          placeholder: 'FR Luftdruck',\n          value: wheel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.bl_id,\n          placeholder: 'BL Luftdruck',\n          value: wheel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: wheel.br_id,\n          placeholder: 'BR Luftdruck',\n          value: wheel.br_pressure\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(ScrollView, null, React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: container2\n      }, React.createElement(View, null, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(View, {\n        style: {\n          textAlign: 'center'\n        }\n      }, React.createElement(Text, null, \" \"), React.createElement(Text, {\n        stlye: {\n          fontfamily: 'arial',\n          fontSize: 16\n        }\n      }, \"Reifentyp ausw\\xE4hlen:\"), React.createElement(Text, {\n        style: {\n          height: 5\n        }\n      }, \" \")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        disabled: !this.validateFormButton1(),\n        title: this.state.ButtonSlicks_Cold,\n        onPress: this.handleSubmitButton1\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton2(),\n        title: this.state.ButtonSlicks_Medium,\n        onPress: this.handleSubmitButton2\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton3(),\n        title: this.state.ButtonSlicks_Hot,\n        onPress: this.handleSubmitButton3\n      })), React.createElement(View, null, React.createElement(Text, {\n        style: {\n          height: 5\n        }\n      }, \" \")), React.createElement(View, {\n        style: container4\n      }, React.createElement(Button, {\n        disabled: !this.validateFormButton4(),\n        title: this.state.ButtonInter,\n        onPress: this.handleSubmitButton4\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton5(),\n        title: this.state.ButtonRainDryWet,\n        onPress: this.handleSubmitButton5\n      }), React.createElement(Button, {\n        disabled: !this.validateFormButton6(),\n        title: this.state.ButtonRainHeavy,\n        onPress: this.handleSubmitButton6\n      })), React.createElement(View, null, React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 300,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: 'left',\n          height: 20,\n          width: 250,\n          fontFamily: 'arial'\n        },\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 300,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        style: {\n          textAlign: 'left',\n          height: 20,\n          width: 250,\n          fontFamily: 'arial'\n        },\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 300,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: 'left',\n          height: 20,\n          width: 250,\n          fontFamily: 'arial'\n        },\n        value: this.state.term1,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            term1: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 300,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: 'left',\n          height: 20,\n          width: 250,\n          fontFamily: 'arial'\n        },\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this4.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Abholdauer: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 300,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        style: {\n          textAlign: 'left',\n          height: 20,\n          width: 250,\n          fontFamily: 'arial'\n        },\n        value: this.state.orderduration,\n        placeholder: \" Zeit in Minuten\",\n        onChangeText: function onChangeText(text) {\n          _this4.setState({\n            orderduration: text\n          });\n\n          _this4.setState({\n            timervalue: text\n          });\n        }\n      })))), React.createElement(View, {\n        style: {\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          width: 200\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Bestellung best\\xE4tigen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })))), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(View, {\n        style: container3\n      }, React.createElement(View, null, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz in Bearbeitung\"), React.createElement(Text, null, \" \")), React.createElement(View, null, React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyretype1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.tyremix1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.variant1)), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, this.state.ordertime)), React.createElement(\"tr\", {\n        style: {\n          height: 50\n        }\n      }, React.createElement(\"td\", null, \" \"), React.createElement(\"td\", null))))))), React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Reifen bearbeiten\"), React.createElement(\"tr\", null, React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderWheelTable())))));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial',\n  textAlign: 'center'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row',\n  justifyContent: 'space-around'\n};\nvar container2 = {};\nvar container3 = {};\nvar container4 = {\n  flexDirection: 'row',\n  justifyContent: 'space-evenly'\n};\nvar container5 = {\n  textAlign: 'center',\n  padding: '20px'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","changeWheelSet","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","NewOrderScreen","props","changeRace","event","navigation","replace","handleSubmit","state","setID","variant","orderduration","term1","setItem","refresh_Buttons","handleSubmitButton1","setState","tyretype","tyremix","helper","dictButtons","handleSubmitButton2","preventDefault","handleSubmitButton3","index","handleSubmitButton4","handleSubmitButton5","handleSubmitButton6","wheels","ButtonSlicks_Cold","ButtonSlicks_Medium","ButtonSlicks_Hot","ButtonInter","ButtonRainDryWet","ButtonRainHeavy","ButtonsList","getItem","accesstoken","raceID","console","log","getWheelDict","getWheelData","then","DataTabular","catch","error","length","toString","timervalue","SetInformation","map","wheel","border","borderColor","textAlign","padding","color","fontFamily","height","width","setNr","status","cat","subcat","setid","temp","fl_id","fl_pressure","fr_id","fr_pressure","bl_id","bl_pressure","br_id","br_pressure","container1","container2","fontSize","fontWeight","fontfamily","container4","validateFormButton1","validateFormButton2","validateFormButton3","validateFormButton4","validateFormButton5","validateFormButton6","text","marginLeft","marginRight","validateForm","justifyContent","container3","tyretype1","tyremix1","variant1","ordertime","renderWheelTable","Component","bigStyle","subStyle","emptylineStyle","orderHeaderStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","orderTextStyle","orderFeedbackStyle","flexDirection","container5"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid,ScrollView, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList,changeWheelSet} from \"./tools\";\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation} from \"./tools_get_wheels\";\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            wheels: [],\n            dictButtons:[],\n            ButtonSlicks_Cold: 'Slicks Cold',\n            ButtonSlicks_Medium: 'Slicks Medium',\n            ButtonSlicks_Hot: 'Slicks Hot',\n            ButtonInter: 'Inters Intermediate',\n            ButtonRainDryWet: 'Rain DryWet',\n            ButtonRainHeavy: 'Rain HeavyWet',\n            ButtonsList : ['Slicks Cold','Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet'],\n            \n        }\n    }\n\n     async componentDidMount(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        console.log(raceID)\n        await this.getWheelDict();\n        console.log(this.state.dictButtons)\n         this.refresh_Buttons()\n        await this.getWheelData()\n    }\n\n    //get Wheel Data\n    async getWheelDict(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       await get_Dict_WheelOrder(accesstoken, raceID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({dictButtons: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state.dictButtons)\n    }\n\n    refresh_Buttons(){\n        if (this.state.dictButtons.length==6) {\n            this.setState({ButtonSlicks_Cold: 'Slicks Cold  ' + this.state.dictButtons[0][0].toString()});\n            this.setState({ButtonSlicks_Medium: 'Slicks Medium  ' + this.state.dictButtons[1][0].toString()});\n            this.setState({ButtonSlicks_Hot: 'Slicks Hot  ' + this.state.dictButtons[2][0].toString()});\n            this.setState({ButtonInter: 'Inters Intermediate  ' + this.state.dictButtons[3][0].toString()});\n            this.setState({ButtonRainDryWet: 'Rain DryWet  ' + this.state.dictButtons[4][0].toString()});\n            this.setState({ButtonRainHeavy: 'Rain HeavyWet  ' + this.state.dictButtons[5][0].toString()});\n        }\n        }\n\n\n    changeRace = event => {\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        changeWheelSet(this.state.setID,this.state.variant,this.state.orderduration,this.state.term1);\n        AsyncStorage.setItem('orderSetID',this.state.setID);\n        this.refresh_Buttons();\n    }\n\n\n    handleSubmitButton1 = event => {\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Cold\"});\n        let helper = this.state.dictButtons;\n        helper[0][0]= helper[0][0]-1;\n        this.setState({setID:helper[0][0]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton2 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Medium\"});\n        let helper = this.state.dictButtons;\n        helper[1][0]= helper[1][0]-1;\n        this.setState({setID: helper[1][1][helper[1][0]]});\n        this.setState({dictButtons: helper});\n\n    }\n    handleSubmitButton3 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Slicks\"});\n        this.setState({tyremix: \"Hot\"});\n        let helper = this.state.dictButtons;\n        helper[2][0]= helper[2][0]-1;\n        const index = helper[2][0]\n        this.setState({setID:helper[2][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton4 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Inters\"});\n        this.setState({tyremix: \"Intermediate\"});\n        let helper = this.state.dictButtons;\n        helper[3][0]= helper[3][0]-1;\n        const index = helper[3][0]\n        this.setState({setID:helper[3][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton5 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Dry Wet\"});\n        let helper = this.state.dictButtons;\n        helper[4][0]= helper[4][0]-1;\n        const index = helper[4][0]\n        this.setState({setID:helper[4][1][index]});\n        this.setState({dictButtons:helper});\n    }\n    handleSubmitButton6 = event => {\n        event.preventDefault();\n        this.setState({tyretype: \"Rain\"});\n        this.setState({tyremix: \"Heavy Wet\"});\n        let helper = this.state.dictButtons;\n        helper[5][0]= helper[5][0]-1;\n        const index = helper[5][0]\n        this.setState({setID:helper[5][1][index]});\n        this.setState({dictButtons:helper});\n    }\n\n\n        validateForm()\n        {\n            return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.term1.length > 0 && this.state.orderduration > 0 && this.state.variant.length > 0;\n        }\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n       validateFormButton1(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[0][0]>0;\n        }\n        validateFormButton2(){\n       return this.state.dictButtons.length==6 &&this.state.dictButtons[1][0]>0;\n        }\n        validateFormButton3(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[2][0]>0;\n        }\n        validateFormButton4(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[3][0]>0;\n        }validateFormButton5(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[4][0]>0;\n        }validateFormButton6(){\n       return this.state.dictButtons.length==6 && this.state.dictButtons[5][0]>0;\n        }\n\n        async getWheelData(){\n            //this.setState({wheels: []});\n            const accesstoken = await AsyncStorage.getItem('accesstoken');\n            const setID = await AsyncStorage.getItem('orderSetID');\n            //const raceID = await AsyncStorage.getItem('raceID');\n            console.log(setID)\n            await getWheelSetInformation(accesstoken, setID).then(DataTabular => {\n                console.log(DataTabular);\n                this.setState({SetInformation: DataTabular});\n                this.setState({wheels: [this.state.SetInformation]});\n                //this.state.wheels.push(this.state.SetInformation);\n            }).catch(function (error) {\n                console.log(error);\n            })\n                console.log(this.state.wheels)\n            }\n\n        renderWheelTable(){\n            return this.state.wheels.map((wheel,) => {\n                return (\n                    <tr bgcolor='#696969' style={{border: \"solid\", borderColor: 'grey',textAlign: \"center\", padding: '8px', color: 'black', fontFamily: 'arial'}}  key={'irgendwas'}>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.setNr} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.status} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.cat} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id ={wheel.subcat} placeholder={wheel.subcat} value={wheel.subcat} /></td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id={wheel.setid}  placeholder={'Temperatur'}  value={wheel.temp}/></td>\n\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id={wheel.fl_id} placeholder={'FL Luftdruck'}  value={wheel.fl_pressure}/>\n                            <input id={wheel.fr_id} placeholder={'FR Luftdruck'} value={wheel.fr_pressure}/>\n                            <input id={wheel.bl_id} placeholder={'BL Luftdruck'} value={wheel.bl_pressure}/>\n                            <input id={wheel.br_id}  placeholder={'BR Luftdruck'}value={wheel.br_pressure}/></td>\n                    </tr>\n                )\n            })\n        }\n\n            renderWheelOrder(){\n            return this.state.wheels.map((wheel,) => {\n                return (\n                    <tr bgcolor='#696969' style={{border: \"solid\", borderColor: 'grey',textAlign: \"center\", padding: '8px', color: 'black', fontFamily: 'arial'}}  key={'irgendwas'}>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.setNr} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.status} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}> {wheel.cat} </td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id ={wheel.subcat} placeholder={wheel.subcat} value={wheel.subcat} /></td>\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id={wheel.setid}  placeholder={'Temperatur'}  value={wheel.temp}/></td>\n\n                        <td style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>\n                            <input id={wheel.fl_id} placeholder={'FL Luftdruck'}  value={wheel.fl_pressure}/>\n                            <input id={wheel.fr_id} placeholder={'FR Luftdruck'} value={wheel.fr_pressure}/>\n                            <input id={wheel.bl_id} placeholder={'BL Luftdruck'} value={wheel.bl_pressure}/>\n                            <input id={wheel.br_id}  placeholder={'BR Luftdruck'}value={wheel.br_pressure}/></td>\n                    </tr>\n                )\n            })\n        }\n\n        render()\n        {\n            return (\n                <ScrollView>\n                <View style={container1}>\n                    <View style={container2}>\n                         <View>\n                        <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                        </View>\n                        <View style={{textAlign: 'center'}}>\n                            <Text> </Text>\n                            <Text stlye={{fontfamily: 'arial', fontSize: 16}}>\n                            Reifentyp auswählen:\n                            </Text>\n                            <Text style={{height: 5}}> </Text>\n                        </View>\n                        <View style={container4}>\n                            <Button\n                            disabled={!this.validateFormButton1()}\n                            title= {this.state.ButtonSlicks_Cold}\n                            onPress={this.handleSubmitButton1}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton2()}\n                            title= {this.state.ButtonSlicks_Medium}\n                            onPress={this.handleSubmitButton2}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton3()}\n                            title= {this.state.ButtonSlicks_Hot}\n                            onPress={this.handleSubmitButton3}\n                        />\n                        </View>\n                        <View>\n                            <Text style={{height: 5}}> </Text>\n                        </View>\n                        <View style={container4}>\n                        <Button\n                            disabled={!this.validateFormButton4()}\n                            title={this.state.ButtonInter}\n                            onPress={this.handleSubmitButton4}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton5()}\n                            title= {this.state.ButtonRainDryWet}\n                            onPress={this.handleSubmitButton5}\n                        />\n                        <Button\n                            disabled={!this.validateFormButton6()}\n                            title={this.state.ButtonRainHeavy}\n                            onPress={this.handleSubmitButton6}\n                        />\n                        </View>\n                <View >\n                    <Text style={{height: 20}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 300, padding: '8px'}}><TextInput style={{textAlign: 'left', height: 20, width: 250, fontFamily: 'arial'}} value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 300, padding: '8px'}}> <TextInput style={{textAlign: 'left', height: 20, width: 250, fontFamily: 'arial'}} value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 300, padding: '8px'}}><TextInput style={{textAlign: 'left', height: 20, width: 250, fontFamily: 'arial'}} value={this.state.term1}\n                                  onChangeText={(text) => this.setState({term1: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 300, padding: '8px'}}><TextInput style={{textAlign: 'left', height: 20, width: 250, fontFamily: 'arial'}} value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Abholdauer: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 300, padding: '8px'}}><TextInput style={{textAlign: 'left', height: 20, width: 250, fontFamily: 'arial'}} value={this.state.orderduration}\n                                   placeholder=\" Zeit in Minuten\" onChangeText={(text) => {this.setState({orderduration: text}); this.setState({timervalue: text})}}/>\n                        </td>\n                    </tr>\n                </table>\n                        <View style={{marginLeft: 'auto', marginRight: 'auto', width: 200}}>\n                        <Text style={{height: 20}}> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Bestellung bestätigen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                        </View>\n                    </View>\n                        </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <View style={container3}>\n                    <View>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz in Bearbeitung\n                    </Text>\n                     <Text> </Text>\n                    </View>\n                    <View>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyretype1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.tyremix1}</td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.variant1}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>{this.state.ordertime}\n                        </td>\n                    </tr>\n                    <tr style={{height: 50}}>\n                        <td> </td>\n                        <td></td>\n                    </tr>\n                     </table>\n                    </View>\n\n                </View>\n                    </View>\n            </View>\n\n                    <div>\n                <h1 id='title'>Reifen bearbeiten</h1>\n                        <tr>\n                <table  id='list_formel'>\n                   <tbody>\n                        {this.renderWheelTable()}\n                    </tbody>\n                </table>\n                </tr>\n                </div>\n                </ScrollView>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial',\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial',\n        textAlign: 'center'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n    };\n    const container2={\n\n    };\n    const container3={\n\n\n    };\n    const container4={\n        flexDirection: 'row',\n        justifyContent: 'space-evenly',\n\n    };\n    const container5={\n        textAlign: 'center',\n        padding: '20px',\n\n    };"]},"metadata":{},"sourceType":"module"}