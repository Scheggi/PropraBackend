{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar AstridScreen = function (_React$Component) {\n  _inherits(AstridScreen, _React$Component);\n\n  var _super = _createSuper(AstridScreen);\n\n  function AstridScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AstridScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      raceID: 0\n    };\n    return _this;\n  }\n\n  _createClass(AstridScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: viewStyles1\n      }, React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return AstridScreen;\n}(React.Component);\n\nexport { AstridScreen as default };\nvar viewStyles1 = {\n  flex: 1,\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontFamily: 'arial',\n  overflowY: 'scroll'\n};","map":{"version":3,"sources":["C:/Users/Niklas/Desktop/frontend/Astrid.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","AsyncStorage","Icon","AstridScreen","props","changeRace","event","preventDefault","navigation","goBack","state","raceID","viewStyles1","Component","flex","alignItems","justifyContent","fontFamily","overflowY"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;;;AAYA,SAAQC,MAAR;AACA,SAAQC,WAAR,EAAqBC,aAArB,EAAoCC,cAApC,EAAmDC,aAAnD,EAAiEC,oBAAjE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,IAAP;;;IAGqBC,Y;;;;;AACjB,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAOnBC,UAPmB,GAON,UAAAC,KAAK,EAAI;AAClBA,MAAAA,KAAK,CAACC,cAAN;;AACA,YAAKH,KAAL,CAAWI,UAAX,CAAsBC,MAAtB;AACH,KAVkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAFe;AAMlB;;;;WASD,kBAAS;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC;AAAb,SACI,oBAAC,MAAD;AACQ,QAAA,KAAK,EAAC,WADd;AAEQ,QAAA,OAAO,EAAE,KAAKP;AAFtB,QADJ,CADJ;AASH;;;;EA1BqCX,KAAK,CAACmB,S;;SAA3BV,Y;AA4BrB,IAAMS,WAAW,GAAE;AACXE,EAAAA,IAAI,EAAE,CADK;AAEXC,EAAAA,UAAU,EAAE,QAFD;AAGXC,EAAAA,cAAc,EAAE,QAHL;AAIXC,EAAAA,UAAU,EAAE,OAJD;AAKXC,EAAAA,SAAS,EAAE;AALA,CAAnB","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput,\r\n    TouchableHighlight,\r\n    SectionList,\r\n    TouchableOpacity,\r\n    ScrollView,\r\n} from 'react-native';\r\nimport {styles} from \"./styles\"\r\nimport {getRaceList, getWeatherTab, timeoutPromise,getWheelsList,getRaceDetails_by_ID} from \"./tools\"\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {Button} from \"react-native-web\";\r\n\r\nexport default class AstridScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            raceID :0,\r\n\r\n        }\r\n    }\r\n    changeRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.goBack();\r\n    }\r\n    // todo letzte\r\n    // todo\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={viewStyles1}>\r\n                <Button\r\n                        title=\"zurÃ¼ck\"\r\n                        onPress={this.changeRace}\r\n                />\r\n\r\n            </View>\r\n        );\r\n    }\r\n}\r\nconst viewStyles1= {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        fontFamily: 'arial',\r\n        overflowY: 'scroll',\r\n    };\r\n"]},"metadata":{},"sourceType":"module"}