{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations } from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nvar WheelScreen = function (_React$Component) {\n  _inherits(WheelScreen, _React$Component);\n\n  var _super = _createSuper(WheelScreen);\n\n  function WheelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WheelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.handleHeatStart = function (event) {\n      event.preventDefault();\n    };\n\n    _this.save_changes_wheel = function (event) {\n      _this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]]);\n    };\n\n    _this.save_changes_wheelSet = function (event) {\n      _this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]]);\n    };\n\n    _this.changeView = function (event) {\n      _this.setState({\n        selectedView: event.target.value\n      });\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\",\n      raceID: 0,\n      dataViews: [{\n        'name': \"Alle Werte\",\n        'id': 1\n      }, {\n        'name': \"Heizdaten\",\n        'id': 2\n      }, {\n        'name': \"Laufleistungen\",\n        'id': 3\n      }, {\n        'name': \"Kalt- und Warmdruckwerte\",\n        'id': 4\n      }],\n      selectedView: 1\n    };\n    return _this;\n  }\n\n  _createClass(WheelScreen, [{\n    key: \"sendNewFormelRequest\",\n    value: function sendNewFormelRequest(formel) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewFormelRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(formel);\n              timeoutPromise(2000, fetch('https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  formel: formel\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  _this2.getTabularData();\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getTabularData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(getWheelInformations(accesstoken, raceID).then(function (formellistTab) {\n                console.log(formellistTab);\n\n                _this3.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var raceid;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceItem'));\n\n            case 4:\n              raceid = _context3.sent;\n              this.setState({\n                raceID: raceid\n              });\n              this.setState({\n                selectedView: 1\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"changeSingleWheel\",\n    value: function changeSingleWheel(id, liste_attribute) {\n      var _this4 = this;\n\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_single_wheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n\n          _this4.getTabularData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changeWheelSet\",\n    value: function changeWheelSet(id, liste_attribute) {\n      var _this5 = this;\n\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_wheelSet', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n\n          _this5.getTabularData().then(function () {\n            return;\n          });\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      var header = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Status', 'Kaltdruck', 'Bleed', 'Heizdaten', 'Warmdruck', 'Target Warmdruck', 'Bleed', 'Reifen ID'];\n      var header2 = ['Bezeichnung', 'Datum und Uhrzeit', 'Heiztemperatur', 'Heizdauer', 'Heizstart', 'Heizende'];\n      var header3 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Unterkategorie', 'Status', 'Laufzeit'];\n      var header4 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kaltdruck', 'bleed_initial', 'bleed_final', 'Kaltdruck final', 'Warmdruck', 'Target Warmdruck Vorne', 'Target Warmdruck Hinten', 'Bleed Warmdruck'];\n\n      if (this.state.selectedView == 1) {\n        return header.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 2) {\n        return header2.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 3) {\n        return header3.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 4) {\n        return header4.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this6 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description,\n          name: 'description',\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start,\n          name: 'order_start',\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kategorie',\n          value: list_formel.cat,\n          name: 'cat',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Unterkategorie',\n          value: list_formel.subcat,\n          name: 'subcat',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bearbeitungsvariante',\n          value: list_formel.variant,\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: list_formel.status,\n          value: list_formel.status,\n          name: 'status',\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Felgentemperatur',\n          value: list_formel.temp_air,\n          name: 'temp_air',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FL',\n          value: list_formel.fl_pressure,\n          name: 'air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FR',\n          value: list_formel.fr_pressure,\n          name: 'air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BL',\n          value: list_formel.bl_pressure,\n          name: 'air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BR',\n          value: list_formel.br_pressure,\n          name: 'air_press',\n          onChange: _this6.save_changes_wheel\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed initial',\n          value: list_formel.bleed_initial,\n          name: 'bleed_initial',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed hot',\n          value: list_formel.bleed_hot,\n          name: 'bleed_hot'\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          },\n          onChange: _this6.save_changes_wheelSet\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heiztemperatur',\n          value: list_formel.temp_heat,\n          name: 'temp_heat',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizdauer',\n          value: list_formel.heat_duration,\n          name: 'heat_duration',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizstart',\n          value: list_formel.heat_start,\n          name: 'heat_start',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizende',\n          value: list_formel.heat_end,\n          name: 'heat_end',\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Zeit der Messung',\n          value: list_formel.heat_press_timestamp,\n          name: 'heat_press_timestamp',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FL',\n          value: list_formel.fl_hot_air_press,\n          name: 'hot_air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FR',\n          value: list_formel.fr_hot_air_press,\n          name: 'hot_air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BL',\n          value: list_formel.bl_hot_air_press,\n          name: 'hot_air_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BR',\n          value: list_formel.br_hot_air_press,\n          name: 'hot_air_press',\n          onChange: _this6.save_changes_wheel\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target vorne',\n          value: list_formel.heat_press_front,\n          name: 'heat_press_front',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target hinten',\n          value: list_formel.heat_press_back,\n          name: 'heat_press_back',\n          onChange: _this6.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'nicht gebleedet',\n          value: list_formel.gebleedet,\n          name: 'gebleedet',\n          onChange: _this6.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FL',\n          value: list_formel.fl_bleed_press,\n          name: 'bleed_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FR',\n          value: list_formel.fr_bleed_press,\n          name: 'bleed_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BL',\n          value: list_formel.bl_bleed_press,\n          name: 'bleed_press',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BR',\n          value: list_formel.br_bleed_press,\n          name: 'bleed_press',\n          onChange: _this6.save_changes_wheel\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'ID FL',\n          value: list_formel.fl_id_scan,\n          name: 'id_scan',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'ID FR',\n          value: list_formel.fr_id_scan,\n          name: 'id_scan',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'ID BL',\n          value: list_formel.bl_id_scan,\n          name: 'id_scan',\n          onChange: _this6.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'ID BR',\n          value: list_formel.br_id_scan,\n          name: 'id_scan',\n          onChange: _this6.save_changes_wheel\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData2\",\n    value: function renderTableData2() {\n      var _this7 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heiztemperatur',\n          value: list_formel.temp_heat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizdauer',\n          value: list_formel.heat_duration\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizstart',\n          value: list_formel.heat_start\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          value: \"HEIZEN STARTEN\",\n          onClick: _this7.handleHeatStart\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Heizende',\n          value: list_formel.heat_end\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData3\",\n    value: function renderTableData3() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kategorie',\n          value: list_formel.cat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Unterkategorie',\n          value: list_formel.subcat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: list_formel.status,\n          value: list_formel.status\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: list_formel.runtime,\n          value: list_formel.runtime\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData4\",\n    value: function renderTableData4() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Felgentemperatur',\n          value: list_formel.temp_air\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FL',\n          value: list_formel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FR',\n          value: list_formel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BL',\n          value: list_formel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BR',\n          value: list_formel.br_pressure\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed initial',\n          value: list_formel.bleed_initial\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed hot',\n          value: list_formel.bleed_hot\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FL',\n          value: list_formel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FR',\n          value: list_formel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BL',\n          value: list_formel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BR',\n          value: list_formel.br_pressure\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Zeit der Messung',\n          value: list_formel.heat_press_timestamp\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FL',\n          value: list_formel.fl_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FR',\n          value: list_formel.fr_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BL',\n          value: list_formel.bl_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BR',\n          value: list_formel.br_hot_air_press\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target vorne',\n          value: list_formel.heat_press_front\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target hinten',\n          value: list_formel.heat_press_back\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'nicht gebleedet',\n          value: list_formel.gebleedet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FL',\n          value: list_formel.fl_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FR',\n          value: list_formel.fr_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BL',\n          value: list_formel.bl_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BR',\n          value: list_formel.br_bleed_press\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.dataViews.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: {\n          overflowY: 'scroll',\n          overflowX: 'scroll',\n          flex: 1\n        }\n      }, React.createElement(\"h1\", null, this.state.selectedView), React.createElement(\"label\", {\n        style: {\n          fontSize: 16,\n          fontFamily: 'arial',\n          textAlign: 'center'\n        }\n      }, \" Ansicht: \", React.createElement(\"select\", {\n        value: this.state.selectedView,\n        onChange: this.changeView\n      }, optionTemplate)), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Dropdownliste, Set ausw\\xE4hlen von Rennen\"), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Tabelle, alle Attribute des Sets in editierbarer Tabelle\"), React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Angelegte Reifen\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderTableHeader(), this.state.selectedView == 1 && this.renderTableData(), this.state.selectedView == 2 && this.renderTableData2(), this.state.selectedView == 3 && this.renderTableData3(), this.state.selectedView == 4 && this.renderTableData4()))), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return WheelScreen;\n}(React.Component);\n\nexport { WheelScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/Reifenmanagement.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","getFormelList","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","getWheelInformations","AsyncStorage","Icon","ScrollViewBase","WheelScreen","props","changeRace","event","preventDefault","navigation","goBack","handleHeatStart","save_changes_wheel","changeSingleWheel","target","id","name","value","save_changes_wheelSet","changeWheelSet","changeView","setState","selectedView","state","list_formel","formel","raceID","dataViews","console","log","fetch","method","headers","body","JSON","stringify","then","response","json","data","getTabularData","catch","error","getItem","accesstoken","formellistTab","raceid","liste_attribute","header","header2","header3","header4","map","key","index","textAlign","padding","color","fontFamily","toUpperCase","setNr","border","borderColor","height","width","description","order_start","cat","subcat","variant","status","temp_air","fl_pressure","fr_pressure","bl_pressure","br_pressure","bleed_initial","bleed_hot","temp_heat","heat_duration","heat_start","heat_end","heat_press_timestamp","fl_hot_air_press","fr_hot_air_press","bl_hot_air_press","br_hot_air_press","heat_press_front","heat_press_back","gebleedet","fl_bleed_press","fr_bleed_press","bl_bleed_press","br_bleed_press","fl_id_scan","fr_id_scan","bl_id_scan","br_id_scan","runtime","optionTemplate","v","overflowY","overflowX","flex","fontSize","renderTableHeader","renderTableData","renderTableData2","renderTableData3","renderTableData4","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity,\n    ScrollView\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList} from \"./tools\"\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation,getWheelInformations} from \"./tools_get_wheels\";\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nexport default class WheelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list_formel: [],\n            formel: \"\",\n            raceID: 0,\n            dataViews: [{'name': \"Alle Werte\", 'id': 1}, {'name': \"Heizdaten\", 'id': 2}, {\n                'name': \"Laufleistungen\",\n                'id': 3\n            }, {'name': \"Kalt- und Warmdruckwerte\", 'id': 4}],\n            selectedView: 1,\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    handleHeatStart = event => {\n        event.preventDefault();\n        //blablabla\n    }\n\n\n    async sendNewFormelRequest(formel) {\n        console.log(formel)\n        timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/formel/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    formel: formel,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                this.getTabularData()\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async getTabularData() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getWheelInformations(accesstoken, raceID).then(formellistTab => {\n            console.log(formellistTab);\n            this.setState({list_formel: formellistTab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async componentDidMount() {\n        await this.getTabularData()\n        const raceid = await AsyncStorage.getItem('raceItem');\n        this.setState({raceID: raceid});\n        this.setState({selectedView: 1});\n    }\n\n    save_changes_wheel = event => {\n        this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]])\n    };\n\n    save_changes_wheelSet = event => {\n        this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]])\n    };\n\n\n    // save change\n    changeSingleWheel(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_single_wheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(\"Pressure Changed\");\n                this.getTabularData().then(() => {\n                    return\n                })\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    changeWheelSet(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_wheelSet', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(\"Pressure Changed\");\n                this.getTabularData().then(() => {\n                    return\n                })\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n\n    // end save change\n\n\n    renderTableHeader() {\n        let header = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Status',\n            'Kaltdruck', 'Bleed', 'Heizdaten', 'Warmdruck', 'Target Warmdruck', 'Bleed', 'Reifen ID'];\n        let header2 = ['Bezeichnung', 'Datum und Uhrzeit', 'Heiztemperatur', 'Heizdauer', 'Heizstart', 'Heizende'];\n        let header3 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Unterkategorie', 'Status', 'Laufzeit'];\n        let header4 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kaltdruck', 'bleed_initial', 'bleed_final', 'Kaltdruck final', 'Warmdruck', 'Target Warmdruck Vorne', 'Target Warmdruck Hinten', 'Bleed Warmdruck'];\n        //let header = Object.keys(this.state.list_formel[0]);\n        if (this.state.selectedView == 1) {\n            return header.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 2) {\n            return header2.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 3) {\n            return header3.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 4) {\n            return header4.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n    }\n\n\n    renderTableData() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}\n                            name={'description'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start} name={'order_start'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Kategorie'} value={list_formel.cat} name={'cat'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Unterkategorie'} value={list_formel.subcat}\n                               name={'subcat'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Bearbeitungsvariante'}\n                               value={list_formel.variant} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={list_formel.status} value={list_formel.status}\n                            name={'status'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Felgentemperatur'}\n                               value={list_formel.temp_air} name={'temp_air'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}\n                               name={'air_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}\n                               name={'air_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}\n                               name={'air_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}\n                               name={'air_press'} onChange={this.save_changes_wheel}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed initial'}\n                               value={list_formel.bleed_initial} name={'bleed_initial'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'bleed hot'} value={list_formel.bleed_hot}\n                               name={'bleed_hot'}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}\n                        onChange={this.save_changes_wheelSet}>\n                        <input id={list_formel.setNr} placeholder={'Heiztemperatur'} value={list_formel.temp_heat}\n                               name={'temp_heat'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizdauer'} value={list_formel.heat_duration}\n                               name={'heat_duration'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizstart'} value={list_formel.heat_start}\n                               name={'heat_start'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizende'} value={list_formel.heat_end}\n                               name={'heat_end'} onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Zeit der Messung'}\n                               value={list_formel.heat_press_timestamp} name={'heat_press_timestamp'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FL'}\n                               value={list_formel.fl_hot_air_press} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FR'}\n                               value={list_formel.fr_hot_air_press} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BL'}\n                               value={list_formel.bl_hot_air_press} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BR'}\n                               value={list_formel.br_hot_air_press} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Target vorne'}\n                               value={list_formel.heat_press_front} name={'heat_press_front'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Target hinten'}\n                               value={list_formel.heat_press_back} name={'heat_press_back'}\n                               onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'nicht gebleedet'} value={list_formel.gebleedet}\n                               name={'gebleedet'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FL'} value={list_formel.fl_bleed_press}\n                               name={'bleed_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FR'} value={list_formel.fr_bleed_press}\n                               name={'bleed_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BL'} value={list_formel.bl_bleed_press}\n                               name={'bleed_press'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BR'} value={list_formel.br_bleed_press}\n                               name={'bleed_press'} onChange={this.save_changes_wheel}/>\n                    </td>\n\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'ID FL'} value={list_formel.fl_id_scan}\n                               name={'id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'ID FR'} value={list_formel.fr_id_scan}\n                               name={'id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'ID BL'} value={list_formel.bl_id_scan}\n                               name={'id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.setNr} placeholder={'ID BR'} value={list_formel.br_id_scan}\n                               name={'id_scan'} onChange={this.save_changes_wheel}/></td>\n                </tr>\n            )\n\n        })\n    }\n\n    renderTableData2() {\n        console.log(this.state.list_formel)\n\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Heiztemperatur'} value={list_formel.temp_heat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Heizdauer'} value={list_formel.heat_duration}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Heizstart'} value={list_formel.heat_start}/>\n                        <input type=\"button\" value=\"HEIZEN STARTEN\" onClick={this.handleHeatStart}/>\n                    </td>\n\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Heizende'} value={list_formel.heat_end}/></td>\n\n                </tr>\n            )\n\n        })\n\n    }\n\n    renderTableData3() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Kategorie'} value={list_formel.cat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Unterkategorie'} value={list_formel.subcat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={list_formel.status} value={list_formel.status}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={list_formel.runtime} value={list_formel.runtime}/>\n                    </td>\n\n                </tr>\n            )\n\n        })\n    }\n\n    renderTableData4() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Felgentemperatur'}\n                               value={list_formel.temp_air}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed initial'}\n                               value={list_formel.bleed_initial}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed hot'} value={list_formel.bleed_hot}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Zeit der Messung'}\n                               value={list_formel.heat_press_timestamp}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FL'}\n                               value={list_formel.fl_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FR'}\n                               value={list_formel.fr_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BL'}\n                               value={list_formel.bl_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BR'}\n                               value={list_formel.br_hot_air_press}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Target vorne'}\n                               value={list_formel.heat_press_front}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Target hinten'}\n                               value={list_formel.heat_press_back}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'nicht gebleedet'} value={list_formel.gebleedet}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FL'} value={list_formel.fl_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FR'} value={list_formel.fr_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BL'} value={list_formel.bl_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BR'} value={list_formel.br_bleed_press}/>\n                    </td>\n\n                </tr>\n            )\n\n        })\n    }\n\n\n    changeView = event => {\n        this.setState({selectedView: event.target.value});\n    }\n\n    render() {\n        let optionTemplate = this.state.dataViews.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n        return (\n            <View style={{overflowY: 'scroll', overflowX: 'scroll', flex: 1}}>\n                <h1>{this.state.selectedView}</h1>\n                <label style={{fontSize: 16, fontFamily: 'arial', textAlign: 'center'}}> Ansicht: <select\n                    value={this.state.selectedView} onChange={this.changeView}>\n                    {optionTemplate}\n                </select>\n                </label>\n                <Text style={{height: 20}}>Dropdownliste, Set auswählen von Rennen</Text>\n                <Text style={{height: 20}}>Tabelle, alle Attribute des Sets in editierbarer Tabelle</Text>\n\n\n                <div>\n                    <h1 id='title'>Angelegte Reifen</h1>\n                    <table id='list_formel'>\n                        <tbody>\n                        {this.renderTableHeader()}\n                        {this.state.selectedView == 1 && this.renderTableData()}\n                        {this.state.selectedView == 2 && this.renderTableData2()}\n                        {this.state.selectedView == 3 && this.renderTableData3()}\n                        {this.state.selectedView == 4 && this.renderTableData4()}\n                        </tbody>\n                    </table>\n                </div>\n                <Text style={{height: 20}}></Text>\n                <Button\n                    title=\"zurück\"\n                    onPress={this.changeRace}\n                />\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}