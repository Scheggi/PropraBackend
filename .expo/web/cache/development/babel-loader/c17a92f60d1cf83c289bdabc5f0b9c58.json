{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations } from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nvar WheelScreen = function (_React$Component) {\n  _inherits(WheelScreen, _React$Component);\n\n  var _super = _createSuper(WheelScreen);\n\n  function WheelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WheelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.save_changes_wheel = function (event) {\n      _this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]]);\n    };\n\n    _this.save_changes_wheelSet = function (event) {\n      _this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]]);\n\n      var copyArray = _this.state.list_formel;\n\n      _this.state.list_formel.forEach(function (element, index) {\n        if (element.setid == event.target.id) {\n          copyArray[index][1] = event.target.value;\n        }\n      });\n\n      _this.setState({\n        list_formel: copyArray\n      });\n\n      console.log(_this.state.list_formel);\n    };\n\n    _this.changeView = function (event) {\n      _this.setState({\n        selectedView: event.target.value\n      });\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\",\n      raceID: 0,\n      dataViews: [{\n        'name': \"Alle Werte\",\n        'id': 1\n      }, {\n        'name': \"Heizdaten\",\n        'id': 2\n      }, {\n        'name': \"Laufleistungen\",\n        'id': 3\n      }, {\n        'name': \"Kalt- und Warmdruckwerte\",\n        'id': 4\n      }],\n      selectedView: 1\n    };\n    return _this;\n  }\n\n  _createClass(WheelScreen, [{\n    key: \"changeSingleWheel\",\n    value: function changeSingleWheel(id, liste_attribute) {\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_single_wheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Pressure Changed\");\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changeWheelSet\",\n    value: function changeWheelSet(id, liste_attribute) {\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(1000, fetch('https://api.race24.cloud/wheel_cont/change_wheelSet', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(data[0]);\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getTabularData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getWheelInformations(accesstoken, raceID).then(function (formellistTab) {\n                _this2.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var raceid;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceItem'));\n\n            case 4:\n              raceid = _context2.sent;\n              this.setState({\n                raceID: raceid\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      var header = ['Kategorie', 'Status', 'Temperatur', 'Reifen Luftdruck', 'Reifen ID'];\n      return header.map(function (key, index) {\n        return React.createElement(\"th\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: index\n        }, key.toUpperCase());\n      });\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this3 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setid\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: \"test\",\n          value: list_formel.cat,\n          name: 'cat',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          name: 'subcat',\n          placeholder: list_formel.subcat,\n          value: list_formel.subcat,\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          name: 'variant',\n          placeholder: 'Variante',\n          value: list_formel.variant,\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: list_formel.status,\n          value: list_formel.status,\n          name: 'status',\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Temperatur',\n          value: list_formel.temp_air,\n          name: 'temp_air',\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Luftdruck BR',\n          value: list_formel.br_pressure,\n          name: 'br_pressure',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Luftdruck BL',\n          value: list_formel.bl_pressure,\n          name: 'br_pressure',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Luftdruck FL',\n          value: list_formel.fr_pressure,\n          name: 'br_pressure',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Luftdruck FL',\n          value: list_formel.fl_pressure,\n          name: 'br_pressure',\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'ID BL',\n          value: list_formel.bl_wheel_id,\n          name: 'wheel_id',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'ID BR',\n          value: list_formel.br_wheel_id,\n          name: 'wheel_id',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'ID FR',\n          value: list_formel.fr_wheel_id,\n          name: 'wheel_id',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'ID FL',\n          value: list_formel.fl_wheel_id,\n          name: 'wheel_id',\n          onChange: _this3.save_changes_wheelSet\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.dataViews.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(\"h1\", null, this.state.selectedView), React.createElement(\"label\", {\n        style: {\n          fontSize: 16,\n          fontFamily: 'arial',\n          textAlign: 'center'\n        }\n      }, \" Ansicht: \", React.createElement(\"select\", {\n        value: this.state.selectedView,\n        onChange: this.changeView\n      }, optionTemplate)), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Dropdownliste, Set ausw\\xE4hlen von Rennen\"), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Tabelle, alle Attribute des Sets in editierbarer Tabelle\"), React.createElement(ScrollView, null, React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Angelegte Reifen\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderTableHeader(), this.renderTableData())))), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return WheelScreen;\n}(React.Component);\n\nexport { WheelScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/Reifenmanagement.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","getFormelList","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","getWheelInformations","AsyncStorage","Icon","ScrollViewBase","WheelScreen","props","changeRace","event","preventDefault","navigation","goBack","save_changes_wheel","changeSingleWheel","target","id","name","value","save_changes_wheelSet","changeWheelSet","copyArray","state","list_formel","forEach","element","index","setid","setState","console","log","changeView","selectedView","formel","raceID","dataViews","liste_attribute","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","getItem","accesstoken","formellistTab","getTabularData","raceid","header","map","key","textAlign","padding","color","fontFamily","toUpperCase","border","borderColor","height","width","cat","subcat","variant","status","temp_air","br_pressure","bl_pressure","fr_pressure","fl_pressure","bl_wheel_id","br_wheel_id","fr_wheel_id","fl_wheel_id","optionTemplate","v","viewStyles","fontSize","renderTableHeader","renderTableData","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity,\n    ScrollView\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList} from \"./tools\"\nimport {get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations} from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nexport default class WheelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list_formel: [],\n            formel: \"\",\n            raceID: 0,\n            dataViews: [{'name': \"Alle Werte\", 'id': 1}, {'name': \"Heizdaten\", 'id': 2}, {\n                'name': \"Laufleistungen\",\n                'id': 3\n            }, {'name': \"Kalt- und Warmdruckwerte\", 'id': 4}],\n            selectedView: 1,\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    save_changes_wheel = event => {\n        this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]]);\n    };\n\n    save_changes_wheelSet = event => {\n        this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]]);\n        //iterieren über this.state.list_formel\n        let copyArray = this.state.list_formel;\n        this.state.list_formel.forEach( function (element,index){if(element.setid==event.target.id){copyArray[index][1]=event.target.value}}  )\n        this.setState({list_formel:copyArray})\n        console.log(this.state.list_formel)\n    };\n\n    // save change\n    changeSingleWheel(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_single_wheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(\"Pressure Changed\")\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    changeWheelSet(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(1000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_wheelSet', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(data[0]);\n                //this.getTabularData().then(() => {\n                //    return\n                //})\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n    // end save change\n\n    async getTabularData() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getWheelInformations(accesstoken, raceID).then(formellistTab => {\n            this.setState({list_formel: formellistTab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async componentDidMount() {\n        await this.getTabularData()\n        const raceid = await AsyncStorage.getItem('raceItem');\n        this.setState({raceID: raceid});\n    }\n\n\n    renderTableHeader() {\n        let header = ['Kategorie', 'Status', 'Temperatur',\n            'Reifen Luftdruck', 'Reifen ID'];\n        //let header = Object.keys(this.state.list_formel[0]);\n        return header.map((key, index) => {\n            return <th bgcolor='#696969'\n                       style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                       key={index}>{key.toUpperCase()}</th>\n        })\n    }\n\n    renderTableData() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            return (\n                <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setid}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder='test' value={list_formel.cat}\n                               name={'cat'}  onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} name={'subcat'} placeholder={list_formel.subcat}\n                               value={list_formel.subcat} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} name={'variant'} placeholder={'Variante'}\n                               value={list_formel.variant} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={list_formel.status} value={list_formel.status}\n                        name = {'status'} onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Temperatur'} value={list_formel.temp_air}\n                        name = {'temp_air'} onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Luftdruck BR'} value={list_formel.br_pressure}\n                        name = {'br_pressure'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Luftdruck BL'} value={list_formel.bl_pressure}\n                        name = {'br_pressure'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Luftdruck FL'} value={list_formel.fr_pressure}\n                        name = {'br_pressure'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Luftdruck FL'} value={list_formel.fl_pressure}\n                        name = {'br_pressure'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'ID BL'} value={list_formel.bl_wheel_id}\n                        name = {'wheel_id'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'ID BR'} value={list_formel.br_wheel_id}\n                        name = {'wheel_id'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'ID FR'} value={list_formel.fr_wheel_id}\n                        name = {'wheel_id'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'ID FL'} value={list_formel.fl_wheel_id}\n                        name = {'wheel_id'} onChange={this.save_changes_wheelSet}/></td>\n                </tr>\n            )\n        })\n    }\n\n    changeView = event => {\n        this.setState({selectedView: event.target.value});\n    }\n\n    render() {\n        let optionTemplate = this.state.dataViews.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n        return (\n            <View style={styles.viewStyles}>\n                <h1>{this.state.selectedView}</h1>\n                <label style={{fontSize: 16, fontFamily: 'arial', textAlign: 'center'}}> Ansicht: <select\n                    value={this.state.selectedView} onChange={this.changeView}>\n                    {optionTemplate}\n                </select>\n                </label>\n                <Text style={{height: 20}}>Dropdownliste, Set auswählen von Rennen</Text>\n                <Text style={{height: 20}}>Tabelle, alle Attribute des Sets in editierbarer Tabelle</Text>\n\n                <ScrollView>\n                    <div>\n                        <h1 id='title'>Angelegte Reifen</h1>\n                        <table id='list_formel'>\n                            <tbody>\n                            {this.renderTableHeader()}\n                            {this.renderTableData()}\n                            </tbody>\n                        </table>\n                    </div>\n                </ScrollView>\n                <Text style={{height: 20}}></Text>\n                <Button\n                    title=\"zurück\"\n                    onPress={this.changeRace}\n                />\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}