{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction changeSingleWheel(id, liste_attribute) {\n  var _this = this;\n\n  timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_single_wheel', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: id,\n      liste_attribute: liste_attribute\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    if (data[1] == 200) {\n      console.log(\"Pressure Changed\");\n\n      _this.getWheelData();\n    } else {\n      console.log(\"failed\");\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction changeWheelSet(id, liste_attribute) {\n  var _this2 = this;\n\n  timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_wheelSet', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: id,\n      liste_attribute: liste_attribute\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    if (data[1] == 200) {\n      console.log(\"Pressure Changed\");\n\n      _this2.getWheelData();\n    } else {\n      console.log(\"failed\");\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction changeTimer(raceID, liste_attribute) {\n  var _this3 = this;\n\n  timeoutPromise(2000, fetch('https://api.race24.cloud/wheel_cont/change_single_wheel', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: raceID,\n      liste_attribute: liste_attribute\n    })\n  })).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    if (data[1] == 200) {\n      console.log(\"Pressure Changed\");\n\n      _this3.getWheelData();\n    } else {\n      console.log(\"failed\");\n    }\n  }).catch(function (error) {\n    console.log(error);\n  });\n}\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    var timeoutId = setTimeout(function () {\n      reject(new Error('promise timeout'));\n    }, ms);\n    promise.then(function (res) {\n      clearTimeout(timeoutId);\n      resolve(res);\n    }, function (err) {\n      clearTimeout(timeoutId);\n      reject(err);\n    });\n  });\n}\n\nfunction refreshToken() {\n  var accesstoken, refreshtoken;\n  return _regeneratorRuntime.async(function refreshToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n        case 2:\n          accesstoken = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('refreshtoken'));\n\n        case 5:\n          refreshtoken = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(timeoutPromise(2000, fetch('https://api.race24.cloud/user/auth/refresh', {\n            method: 'POST',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              access_token: accesstoken,\n              refresh_token: refreshtoken\n            })\n          })).then(function (response) {\n            return response.json();\n          }).then(function (data) {\n            AsyncStorage.setItem('accesstoken', String(data.access_token));\n          }));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport { changeWheelSet, changeSingleWheel };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/tools_formel.js"],"names":["AsyncStorage","changeSingleWheel","id","liste_attribute","timeoutPromise","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","getWheelData","catch","error","changeWheelSet","changeTimer","raceID","ms","promise","Promise","resolve","reject","timeoutId","setTimeout","Error","res","clearTimeout","err","refreshToken","getItem","accesstoken","refreshtoken","access_token","refresh_token","setItem","String"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\n\n// save changes AirPressure\nfunction changeSingleWheel( id, liste_attribute){\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_single_wheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute:liste_attribute,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData()\n                }\n                else {console.log(\"failed\")}\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n// save changes AirPressure\nfunction changeWheelSet( id, liste_attribute){\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_wheelSet', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute:liste_attribute,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData()\n                }\n                else {console.log(\"failed\")}\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n// save changes AirPressure\nfunction changeTimer( raceID, liste_attribute){\n            timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_single_wheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: raceID,\n                    liste_attribute:liste_attribute,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    console.log(\"Pressure Changed\")\n                    this.getWheelData()\n                }\n                else {console.log(\"failed\")}\n            }).catch(function (error) {\n                console.log(error);\n            })\n        }\n\n\n//  ----------------------------------------------------------------------------------------------\n\nfunction timeoutPromise(ms, promise) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('promise timeout'))\n    }, ms);\n    promise.then(\n      (res) => {\n        clearTimeout(timeoutId);\n        resolve(res);\n      },\n      (err) => {\n        clearTimeout(timeoutId);\n        reject(err);\n      }\n    );\n  })\n}\n\n\n\nasync function refreshToken() {\n  let accesstoken = await AsyncStorage.getItem('accesstoken');\n  let refreshtoken = await AsyncStorage.getItem('refreshtoken');\n  await timeoutPromise(2000, fetch(\n      'https://api.race24.cloud/user/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          access_token: accesstoken,\n          refresh_token: refreshtoken,\n        })\n      }\n  )).then(\n      response => response.json()\n  ).then(\n      data => {\n        AsyncStorage.setItem('accesstoken', String(data.access_token));\n      }\n  )\n}\n\n\n\nexport {changeWheelSet,changeSingleWheel}\n"]},"metadata":{},"sourceType":"module"}