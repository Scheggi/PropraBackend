{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList } from \"./tools\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewRaceRequest(_this.state.raceid, _this.state.tyretype, _this.state.tyremix, _this.state.term, _this.state.variant, _this.state.number, _this.state.orderdate, _this.state.ordertime, _this.state.pickuptime);\n    };\n\n    _this.state = {\n      raceid: 0,\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      number: '',\n      orderdate: '',\n      ordertime: '',\n      pickuptime: '',\n      raceList: [],\n      time: {},\n      seconds: 1800,\n      timervalue: \"\"\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"sendNewRaceRequest\",\n    value: function sendNewRaceRequest(type, place, date) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewRaceRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  type: type,\n                  place: place,\n                  date: date\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem(\"raceIDNewRace\", data[0].id);\n                  console.log(\"changeNav\");\n\n                  _this2.props.navigation.replace(\"Race\");\n\n                  return parseInt(data[0].id);\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n      var obj = {\n        \"h\": hours,\n        \"m\": minutes,\n        \"s\": seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"startTimer\",\n    value: function startTimer() {\n      var hour = 0;\n      var minute = 0;\n      var second = 0;\n      var atime = this.state.timervalue.split(':');\n\n      if (atime[0].length > 0) {\n        hour = parseInt(atime[0]);\n      }\n\n      if (atime[1].length > 0) {\n        minute = parseInt(atime[1]);\n      }\n\n      if (atime[2].length > 0) {\n        second = parseInt(atime[2]);\n      }\n\n      this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n      if (this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, this.state.seconds);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var seconds = this.state.seconds - 1;\n      this.setState({\n        time: this.secondsToTime(seconds),\n        seconds: seconds\n      });\n\n      if (seconds == 0) {\n        clearInterval(this.timer);\n      }\n    }\n  }, {\n    key: \"getTime\",\n    value: function getTime() {\n      var today = new Date();\n      var h = today.getHours();\n      var m = today.getMinutes();\n      return h + \":\" + m;\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.timervalue.length > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: container1\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\"), React.createElement(\"label\", {\n        style: {\n          fontFamily: 'arial'\n        }\n      }, \"W\\xE4hle das gew\\xFCnschte Rennen aus:\", React.createElement(\"select\", {\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bezeichnung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.term,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            term: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            variant: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestelldatum: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.orderdate,\n        placeholder: \"TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this3.setState({\n            orderdate: date\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bestellzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.ordertime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this3.setState({\n            ordertime: time\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Abholzeit: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.pickuptime,\n        placeholder: \"SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this3.setState({\n            pickuptime: time\n          });\n        }\n      })))), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung anlegen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-start'\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 120\n        }\n      }, \" \"), React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Reifensatz aktuell in Bearbeitung\"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Reifenart: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.tyretype,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyretype: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Mischung: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.tyremix,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyremix: text\n          });\n        }\n      }))), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          fontWeight: 'bold',\n          color: 'white',\n          fontFamily: 'arial'\n        }\n      }, React.createElement(\"label\", null, \" Bearbeitungsvariante: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.variant,\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            variant: text\n          });\n        }\n      })))), React.createElement(Text, {\n        style: bigStyle\n      }, \"Timer Reifenbestellung\"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenbestellung abholbereit in: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM:SS\",\n        onChangeText: function onChangeText(time) {\n          return _this3.setState({\n            timervalue: time\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(\"button\", {\n        disabled: !this.validateForm1(),\n        onClick: this.startTimer\n      }, \"Start\"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderFeedbackStyle\n      }, \"Stunden: \", this.state.time.h, \" Minuten: \", this.state.time.m, \" Sekunden: \", this.state.time.s, \" \"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 40\n};\nvar emptylineStyle = {\n  height: 20\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16,\n  lineHeight: 16,\n  fontfamily: 'arial'\n};\nvar orderTextStyle = {\n  height: 30,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14,\n  fontfamily: 'arial'\n};\nvar orderFeedbackStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  textAlign: 'center',\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};\nvar container1 = {\n  padding: '50px',\n  flexDirection: 'row'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","NewOrderScreen","props","getRaceID","event","id","target","value","setItem","saveRaceIDinState","changeRace","preventDefault","navigation","replace","handleSubmit","sendNewRaceRequest","state","raceid","tyretype","tyremix","term","variant","number","orderdate","ordertime","pickuptime","raceList","time","seconds","timervalue","timer","startTimer","bind","countDown","type","place","date","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","parseInt","catch","error","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","hour","minute","second","atime","split","length","stunde","sekunde","setInterval","setState","secondsToTime","clearInterval","today","Date","h","getHours","m","getMinutes","optionTemplate","map","v","name","container1","justifyContent","fontSize","fontWeight","textAlign","fontFamily","height","padding","color","border","borderColor","width","text","validateForm","bigStyle","emptylineStyle","orderHeaderStyle","orderTextStyle","validateForm1","orderFeedbackStyle","s","Component","subStyle","margin","borderWidth","backgroundColor","fontweight","lineHeight","fontfamily","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList} from \"./tools\";\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceid: 0,\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            number: '',\n            orderdate: '',\n            ordertime: '',\n            pickuptime: '',\n            raceList: [],\n\n            time: {},\n            seconds: 1800,\n            timervalue: \"\",\n        }\n        this.timer = 0;\n        this.startTimer = this.startTimer.bind(this);\n        this.countDown = this.countDown.bind(this);\n    }\n\n    getRaceID = event => {\n        const id = event.target.value;\n        AsyncStorage.setItem(\"raceIDHelper\", event.target.value);\n        this.saveRaceIDinState();\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n     handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewRaceRequest(this.state.raceid, this.state.tyretype, this.state.tyremix, this.state.term,\n            this.state.variant, this.state.number, this.state.orderdate, this.state.ordertime, this.state.pickuptime);\n    }\n\n     async sendNewRaceRequest(type,place,date) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    type:type,\n                    place:place,\n                    date:date,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    AsyncStorage.setItem(\"raceIDNewRace\",data[0].id)\n                    console.log(\"changeNav\")\n                    this.props.navigation.replace(\"Race\");//replace('Race');\n                    return parseInt(data[0].id)\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n\n\n\n\n        secondsToTime(secs)\n        {\n            let hours = Math.floor(secs / (60 * 60));\n            let divisor_for_minutes = secs % (60 * 60);\n            let minutes = Math.floor(divisor_for_minutes / 60);\n            let divisor_for_seconds = divisor_for_minutes % 60;\n            let seconds = Math.ceil(divisor_for_seconds);\n            let obj = {\n                \"h\": hours,\n                \"m\": minutes,\n                \"s\": seconds\n            };\n            return obj;\n        }\n\n        startTimer()\n        {\n            var hour = 0;\n            var minute = 0;\n            var second = 0;\n            var atime = this.state.timervalue.split(':');\n            if (atime[0].length > 0) {\n                hour = parseInt(atime[0]);\n            }\n            if (atime[1].length > 0) {\n                minute = parseInt(atime[1]);\n            }\n            if (atime[2].length > 0) {\n                second = parseInt(atime[2]);\n            }\n            this.state.seconds = stunde * 3600 + minute * 60 + sekunde;\n\n            if (this.state.seconds > 0) {\n                this.timer = setInterval(this.countDown, this.state.seconds);\n            }\n        }\n\n        countDown()\n        {\n            let seconds = this.state.seconds - 1;\n            this.setState({\n                time: this.secondsToTime(seconds),\n                seconds: seconds,\n            });\n            // Check if  zero.\n            if (seconds == 0) {\n                clearInterval(this.timer);\n            }\n        }\n\n        getTime()\n        {\n            var today = new Date();\n            var h = today.getHours();\n            var m = today.getMinutes();\n            return h + \":\" + m;\n        }\n\n        validateForm()\n        {\n            return this.state.tyretype.length > 0 && this.state.tyremix.length > 0 && this.state.number.length > 0 && this.state.orderdate.length > 0 && this.state.ordertime.length > 0 && this.state.pickuptime.length > 0;\n        }\n\n\n        validateForm1()\n        {\n            return this.state.timervalue.length > 0;\n        }\n\n        render()\n        {\n            let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n            ));\n\n            return (\n                <View style={container1}>\n                <View style={{justifyContent: 'flex-start'}}>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Neue Reifenbestellung anlegen\n                    </Text>\n                    <label style={{fontFamily: 'arial'}}>\n                         Wähle das gewünschte Rennen aus:\n                        <select value={this.state.id} onChange={this.getRaceID}>\n                        {optionTemplate}\n                </select>\n                </label>\n                    <Text style={{height: 10}}> </Text>\n                    <table >\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bezeichnung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.term}\n                                  onChangeText={(text) => this.setState({term: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestelldatum: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.orderdate}\n                                   placeholder='TT.MM.JJJJ' onChangeText={(date) => this.setState({orderdate: date})}/></td>\n                    </tr>\n                   <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bestellzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.ordertime}\n                                   placeholder='SS:MM' onChangeText={(time) => this.setState({ordertime: time})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Abholzeit: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.pickuptime}\n                                    placeholder='SS:MM' onChangeText={(time) => this.setState({pickuptime: time})}/></td>\n                    </tr>\n                </table>\n                        <Text> </Text>\n                        <Button\n                            disabled={!this.validateForm()}\n                            title=\"Reifenbestellung anlegen\"\n                            onPress={this.handleSubmit}\n                        />\n                        <Text> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                            />\n                    </View>\n                <View style={{justifyContent: 'flex-start'}}>\n                        <Text style={{height: 120}}> </Text>\n                    <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                        Reifensatz aktuell in Bearbeitung\n                    </Text>\n                     <table>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Reifenart: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.tyretype}\n                                   onChangeText={(text) => this.setState({tyretype: text})}/></td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Mischung: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.tyremix}\n                                    onChangeText={(text) => this.setState({tyremix: text})}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', fontWeight: 'bold', color: 'white', fontFamily: 'arial'}}><label> Bearbeitungsvariante: </label></td>\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.variant}\n                                   onChangeText={(text) => this.setState({variant: text})}/>\n                        </td>\n                    </tr>\n                     </table>\n                    <Text style={bigStyle}>\n                        Timer Reifenbestellung\n                    </Text>\n                        <Text style={emptylineStyle}> </Text>\n                        <Text style={emptylineStyle}> </Text>\n                        <Text style={orderHeaderStyle}> Reifenbestellung abholbereit in: </Text>\n                        <TextInput\n                            style={orderTextStyle}\n                            placeholder=\" SS:MM:SS\"\n                            onChangeText={(time) => this.setState({timervalue: time})}\n                        />\n                        <Text style={emptylineStyle}> </Text>\n                        <button\n\n                            disabled={!this.validateForm1()}\n                            onClick={this.startTimer}>Start\n                        </button>\n                        <Text style={emptylineStyle}> </Text>\n                        <Text style={orderFeedbackStyle}>\n                            Stunden: {this.state.time.h} Minuten: {this.state.time.m} Sekunden: {this.state.time.s} </Text>\n                        <Text style={emptylineStyle}> </Text>\n                        <Text style={emptylineStyle}> </Text>\n                        <Text style={emptylineStyle}> </Text>\n                        <Button\n                            title=\"zurück\"\n                            onPress={this.changeRace}\n                        />\n                    </View>\n            </View>\n            );\n        }\n    }\n\n\n    const\n    bigStyle = {\n        color: 'black',\n        fontSize: 30,\n        fontWeight: 'bold'\n    }\n\n    const\n    subStyle = {\n        fontSize: 20,\n        height: 40\n    }\n\n    const\n    emptylineStyle = {\n        height: 20,\n    }\n\n    const\n    orderHeaderStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#696969',\n        color: '#ffffff',\n        fontweight: 'bold',\n        fontSize: 16,\n        lineHeight: 16,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderTextStyle = {\n        height: 30,\n        width: 300,\n        margin: 3,\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14,\n        fontfamily: 'arial'\n    };\n\n    const\n    orderFeedbackStyle = {\n        height: 40,\n        width: 300,\n        margin: 3,\n        textAlign: 'center',\n        borderWidth: 1,\n        padding: 10,\n        backgroundColor: '#d3d3d3',\n        fontSize: 14\n    };\n    const container1 ={\n        padding: '50px',\n        flexDirection: 'row',\n    };"]},"metadata":{},"sourceType":"module"}