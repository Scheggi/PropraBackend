{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations } from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nvar WheelScreen = function (_React$Component) {\n  _inherits(WheelScreen, _React$Component);\n\n  var _super = _createSuper(WheelScreen);\n\n  function WheelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WheelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.save_changes_wheel = function (event) {\n      _this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]]);\n\n      var copyArray = _this.state.list_formel;\n      console.log(event.target.className);\n      var wheel_id = event.target.className.toString().substring(0, 2) + '_id';\n      console.log(wheel_id);\n\n      _this.state.list_formel.forEach(function (element, index) {\n        if (element.wheel_id == event.target.id) {\n          copyArray[index][event.target.className] = event.target.value;\n        }\n      });\n\n      _this.setState({\n        list_formel: copyArray\n      });\n\n      console.log(_this.state.list_formel);\n    };\n\n    _this.handleHeatStart = function (event) {\n      event.preventDefault();\n    };\n\n    _this.save_changes_wheelSet = function (event) {\n      _this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]]);\n\n      var copyArray = _this.state.list_formel;\n\n      _this.state.list_formel.forEach(function (element, index) {\n        if (element.setid == event.target.id) {\n          copyArray[index][event.target.name] = event.target.value;\n        }\n      });\n\n      _this.setState({\n        list_formel: copyArray\n      });\n\n      console.log(_this.state.list_formel);\n    };\n\n    _this.changeView = function (event) {\n      _this.setState({\n        selectedView: event.target.value\n      });\n    };\n\n    _this.state = {\n      list_formel: [],\n      formel: \"\",\n      raceID: 0,\n      dataViews: [{\n        'name': \"Alle Werte\",\n        'id': 1\n      }, {\n        'name': \"Heizdaten\",\n        'id': 2\n      }, {\n        'name': \"Laufleistungen\",\n        'id': 3\n      }, {\n        'name': \"Kalt- und Warmdruckwerte\",\n        'id': 4\n      }],\n      selectedView: 1\n    };\n    return _this;\n  }\n\n  _createClass(WheelScreen, [{\n    key: \"changeSingleWheel\",\n    value: function changeSingleWheel(id, liste_attribute) {\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(1000, fetch('https://api.race24.cloud/wheel_cont/change_single_wheel', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(\"Wheel Changed\");\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"changeWheelSet\",\n    value: function changeWheelSet(id, liste_attribute) {\n      console.log(liste_attribute);\n      console.log(id);\n      timeoutPromise(1000, fetch('https://api.race24.cloud/wheel_cont/change_wheelSet', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          liste_attribute: liste_attribute\n        })\n      })).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        if (data[1] == 200) {\n          console.log(data[0]);\n        } else {\n          console.log(\"failed\");\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getTabularData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getWheelInformations(accesstoken, raceID).then(function (formellistTab) {\n                _this2.setState({\n                  list_formel: formellistTab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var raceid;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this.getTabularData());\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceItem'));\n\n            case 4:\n              raceid = _context2.sent;\n              this.setState({\n                raceID: raceid\n              });\n              this.setState({\n                selectedView: 1\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      var header = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Status', 'Kaltdruck', 'Bleed', 'Heizdaten', 'Warmdruck', 'Target Warmdruck', 'Bleed', 'Reifen ID'];\n      var header2 = ['Bezeichnung', 'Datum und Uhrzeit', 'Heiztemperatur', 'Heizdauer', 'Heizstart', 'Heizende'];\n      var header3 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Unterkategorie', 'Status', 'Laufzeit'];\n      var header4 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kaltdruck', 'bleed_initial', 'bleed_final', 'Kaltdruck final', 'Warmdruck', 'Target Warmdruck Vorne', 'Target Warmdruck Hinten', 'Bleed Warmdruck'];\n\n      if (this.state.selectedView == 1) {\n        return header.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 2) {\n        return header2.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 3) {\n        return header3.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n\n      if (this.state.selectedView == 4) {\n        return header4.map(function (key, index) {\n          return React.createElement(\"th\", {\n            bgcolor: \"#696969\",\n            style: {\n              textAlign: \"left\",\n              padding: '8px',\n              color: 'white',\n              fontFamily: 'arial'\n            },\n            key: index\n          }, key.toUpperCase());\n        });\n      }\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this3 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setid\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: \"test\",\n          value: list_formel.cat,\n          name: 'cat',\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          name: 'subcat',\n          placeholder: list_formel.subcat,\n          value: list_formel.subcat,\n          onChange: _this3.save_changes_wheelSet\n        }), React.createElement(\"input\", {\n          id: list_formel.setid,\n          name: 'variant',\n          placeholder: 'Variante',\n          value: list_formel.variant,\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: list_formel.status,\n          value: list_formel.status,\n          name: 'status',\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Temperatur',\n          value: list_formel.temp_air,\n          name: 'temp_air',\n          onChange: _this3.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.br_id,\n          placeholder: 'Luftdruck BR',\n          value: list_formel.br_pressure,\n          name: 'pressure',\n          className: 'br_pressure',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.bl_id,\n          placeholder: 'Luftdruck BL',\n          value: list_formel.bl_pressure,\n          name: 'pressure',\n          className: 'bl_pressure',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.fr_id,\n          placeholder: 'Luftdruck FL',\n          value: list_formel.fr_pressure,\n          name: 'pressure',\n          className: 'fr_pressure',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.fl_id,\n          placeholder: 'Luftdruck FL',\n          value: list_formel.fl_pressure,\n          name: 'pressure',\n          className: 'fl_pressure',\n          onChange: _this3.save_changes_wheel\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.bl_id,\n          placeholder: 'ID BL',\n          value: list_formel.bl_id_scan,\n          name: 'id_scan',\n          className: 'bl_id_scan',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.br_id,\n          placeholder: 'ID BR',\n          value: list_formel.br_id_scan,\n          name: 'id_scan',\n          className: 'br_id_scan',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.fr_id,\n          placeholder: 'ID FR',\n          value: list_formel.fr_id_scan,\n          name: 'id_scan',\n          className: 'fr_id_scan',\n          onChange: _this3.save_changes_wheel\n        }), React.createElement(\"input\", {\n          id: list_formel.fl_id,\n          placeholder: 'ID FL',\n          value: list_formel.fl_id_scan,\n          name: 'id_scan',\n          className: 'fl_id_scan',\n          onChange: _this3.save_changes_wheel\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData2\",\n    value: function renderTableData2() {\n      var _this4 = this;\n\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: 'Tabelle2'\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description,\n          name: 'description',\n          onChange: _this4.save_changes_wheelSet\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Heiztemperatur',\n          value: list_formel.temp_heat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Heizdauer',\n          value: list_formel.heat_duration\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Heizstart',\n          value: list_formel.heat_start\n        }), React.createElement(\"input\", {\n          type: \"button\",\n          value: \"HEIZEN STARTEN\",\n          onClick: _this4.handleHeatStart\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setid,\n          placeholder: 'Heizende',\n          value: list_formel.heat_end\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData3\",\n    value: function renderTableData3() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kategorie',\n          value: list_formel.cat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Unterkategorie',\n          value: list_formel.subcat\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: list_formel.status,\n          value: list_formel.status\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: list_formel.runtime,\n          value: list_formel.runtime\n        })));\n      });\n    }\n  }, {\n    key: \"renderTableData4\",\n    value: function renderTableData4() {\n      console.log(this.state.list_formel);\n      return this.state.list_formel.map(function (list_formel, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: list_formel.setNr\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Setbezeichnung',\n          value: list_formel.description\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Datum und Uhrzeit',\n          value: list_formel.order_start\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Felgentemperatur',\n          value: list_formel.temp_air\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FL',\n          value: list_formel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FR',\n          value: list_formel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BL',\n          value: list_formel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BR',\n          value: list_formel.br_pressure\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed initial',\n          value: list_formel.bleed_initial\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 150,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'bleed hot',\n          value: list_formel.bleed_hot\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FL',\n          value: list_formel.fl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck FR',\n          value: list_formel.fr_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BL',\n          value: list_formel.bl_pressure\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Kaltdruck BR',\n          value: list_formel.br_pressure\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Zeit der Messung',\n          value: list_formel.heat_press_timestamp\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FL',\n          value: list_formel.fl_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck FR',\n          value: list_formel.fr_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BL',\n          value: list_formel.bl_hot_air_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Warmdruck BR',\n          value: list_formel.br_hot_air_press\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target vorne',\n          value: list_formel.heat_press_front\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Target hinten',\n          value: list_formel.heat_press_back\n        })), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'dimgrey',\n            height: 20,\n            width: 100,\n            padding: '8px'\n          }\n        }, React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'nicht gebleedet',\n          value: list_formel.gebleedet\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FL',\n          value: list_formel.fl_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed FR',\n          value: list_formel.fr_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BL',\n          value: list_formel.bl_bleed_press\n        }), React.createElement(\"input\", {\n          id: list_formel.setNr,\n          placeholder: 'Bleed BR',\n          value: list_formel.br_bleed_press\n        })));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.dataViews.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: {\n          overflowY: 'scroll',\n          overflowX: 'scroll',\n          flex: 1\n        }\n      }, React.createElement(\"h1\", null, this.state.selectedView), React.createElement(\"label\", {\n        style: {\n          fontSize: 16,\n          fontFamily: 'arial',\n          textAlign: 'center'\n        }\n      }, \" Ansicht: \", React.createElement(\"select\", {\n        value: this.state.selectedView,\n        onChange: this.changeView\n      }, optionTemplate)), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Dropdownliste, Set ausw\\xE4hlen von Rennen\"), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \"Tabelle, alle Attribute des Sets in editierbarer Tabelle\"), React.createElement(\"div\", null, React.createElement(\"h1\", {\n        id: \"title\"\n      }, \"Angelegte Reifen\"), React.createElement(\"table\", {\n        id: \"list_formel\"\n      }, React.createElement(\"tbody\", null, this.renderTableHeader(), this.state.selectedView == 1 && this.renderTableData(), this.state.selectedView == 2 && this.renderTableData2(), this.state.selectedView == 3 && this.renderTableData3(), this.state.selectedView == 4 && this.renderTableData4()))), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return WheelScreen;\n}(React.Component);\n\nexport { WheelScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/Reifenmanagement.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","getFormelList","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","getWheelInformations","AsyncStorage","Icon","ScrollViewBase","WheelScreen","props","changeRace","event","preventDefault","navigation","goBack","save_changes_wheel","changeSingleWheel","target","id","name","value","copyArray","state","list_formel","console","log","className","wheel_id","toString","substring","forEach","element","index","setState","handleHeatStart","save_changes_wheelSet","changeWheelSet","setid","changeView","selectedView","formel","raceID","dataViews","liste_attribute","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","getItem","accesstoken","formellistTab","getTabularData","raceid","header","header2","header3","header4","map","key","textAlign","padding","color","fontFamily","toUpperCase","border","borderColor","height","width","cat","subcat","variant","status","temp_air","br_id","br_pressure","bl_id","bl_pressure","fr_id","fr_pressure","fl_id","fl_pressure","bl_id_scan","br_id_scan","fr_id_scan","fl_id_scan","description","order_start","temp_heat","heat_duration","heat_start","heat_end","setNr","runtime","bleed_initial","bleed_hot","heat_press_timestamp","fl_hot_air_press","fr_hot_air_press","bl_hot_air_press","br_hot_air_press","heat_press_front","heat_press_back","gebleedet","fl_bleed_press","fr_bleed_press","bl_bleed_press","br_bleed_press","optionTemplate","v","overflowY","overflowX","flex","fontSize","renderTableHeader","renderTableData","renderTableData2","renderTableData3","renderTableData4","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity,\n    ScrollView\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getFormelList} from \"./tools\"\nimport {get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getWheelInformations} from \"./tools_get_wheels\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\nimport ScrollViewBase from \"react-native-web/dist/exports/ScrollView/ScrollViewBase\";\n\nexport default class WheelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            list_formel: [],\n            formel: \"\",\n            raceID: 0,\n            dataViews: [{'name': \"Alle Werte\", 'id': 1}, {'name': \"Heizdaten\", 'id': 2}, {\n                'name': \"Laufleistungen\",\n                'id': 3\n            }, {'name': \"Kalt- und Warmdruckwerte\", 'id': 4}],\n            selectedView: 1,\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    save_changes_wheel = event => {\n        this.changeSingleWheel(event.target.id, [[event.target.name, event.target.value]]);\n        let copyArray = this.state.list_formel;\n        console.log(event.target.className)\n        const wheel_id = event.target.className.toString().substring(0,2)+'_id'\n        console.log(wheel_id)\n        this.state.list_formel.forEach( function (element,index){if(element.wheel_id==event.target.id){copyArray[index][event.target.className]=event.target.value}});\n        this.setState({list_formel:copyArray});\n        console.log(this.state.list_formel);\n    };\n\n    handleHeatStart = event => {\n        event.preventDefault();\n        //blablabla\n    };\n\n    save_changes_wheelSet = event => {\n        this.changeWheelSet(event.target.id, [[event.target.name, event.target.value]]);\n        //iterieren über this.state.list_formel\n        let copyArray = this.state.list_formel;\n        this.state.list_formel.forEach( function (element,index){if(element.setid==event.target.id){copyArray[index][event.target.name]=event.target.value}});\n        this.setState({list_formel:copyArray});\n        console.log(this.state.list_formel);\n    };\n\n    // save change\n    changeSingleWheel(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(1000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_single_wheel', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(\"Wheel Changed\")\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    changeWheelSet(id, liste_attribute) {\n        console.log(liste_attribute);\n        console.log(id);\n        timeoutPromise(1000, fetch(\n            'https://api.race24.cloud/wheel_cont/change_wheelSet', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    id: id,\n                    liste_attribute: liste_attribute,\n                })\n            })\n        ).then(response => response.json()).then(data => {\n            if (data[1] == 200) {\n                console.log(data[0]);\n            } else {\n                console.log(\"failed\")\n            }\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n    // end save change\n\n    async getTabularData() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getWheelInformations(accesstoken, raceID).then(formellistTab => {\n            this.setState({list_formel: formellistTab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async componentDidMount() {\n        await this.getTabularData()\n        const raceid = await AsyncStorage.getItem('raceItem');\n        this.setState({raceID: raceid});\n        this.setState({selectedView: 1});\n    }\n\n    renderTableHeader() {\n        let header = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Status',\n            'Kaltdruck', 'Bleed', 'Heizdaten', 'Warmdruck', 'Target Warmdruck', 'Bleed', 'Reifen ID'];\n        let header2 = ['Bezeichnung', 'Datum und Uhrzeit', 'Heiztemperatur', 'Heizdauer', 'Heizstart', 'Heizende'];\n        let header3 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kategorie', 'Unterkategorie', 'Status', 'Laufzeit'];\n        let header4 = ['Bezeichnung', 'Datum und Uhrzeit', 'Kaltdruck', 'bleed_initial', 'bleed_final', 'Kaltdruck final', 'Warmdruck', 'Target Warmdruck Vorne', 'Target Warmdruck Hinten', 'Bleed Warmdruck'];\n        //let header = Object.keys(this.state.list_formel[0]);\n        if (this.state.selectedView == 1) {\n            return header.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 2) {\n            return header2.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 3) {\n            return header3.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n        if (this.state.selectedView == 4) {\n            return header4.map((key, index) => {\n                return <th bgcolor='#696969'\n                           style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                           key={index}>{key.toUpperCase()}</th>\n            })\n        }\n    }\n\n\n    renderTableData(){\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            return (\n                <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setid}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder='test' value={list_formel.cat}\n                               name={'cat'}  onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} name={'subcat'} placeholder={list_formel.subcat}\n                               value={list_formel.subcat} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} name={'variant'} placeholder={'Variante'}\n                               value={list_formel.variant} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={list_formel.status} value={list_formel.status}\n                        name = {'status'} onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Temperatur'} value={list_formel.temp_air}\n                        name = {'temp_air'}  onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.br_id} placeholder={'Luftdruck BR'} value={list_formel.br_pressure}\n                        name = {'pressure'} className={'br_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.bl_id}  placeholder={'Luftdruck BL'} value={list_formel.bl_pressure}\n                        name = {'pressure'} className={'bl_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'Luftdruck FL'} value={list_formel.fr_pressure}\n                        name = {'pressure'} className={'fr_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fl_id} placeholder={'Luftdruck FL'} value={list_formel.fl_pressure}\n                        name = {'pressure'} className={'fl_pressure'} onChange={this.save_changes_wheel}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.bl_id} placeholder={'ID BL'} value={list_formel.bl_id_scan}\n                        name = {'id_scan'} className={'bl_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.br_id} placeholder={'ID BR'} value={list_formel.br_id_scan}\n                        name = {'id_scan'} className={'br_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'ID FR'} value={list_formel.fr_id_scan}\n                        name = {'id_scan'} className={'fr_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fl_id} placeholder={'ID FL'} value={list_formel.fl_id_scan}\n                        name = {'id_scan'} className={'fl_id_scan'} onChange={this.save_changes_wheel}/></td>\n                </tr>\n            )\n        })\n    }\n     renderTableData2() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            return (\n                <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={'tabular2'}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setid} placeholder={'Setbezeichnung'} value={list_formel.description}\n                            name={'description'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setid} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start} name={'order_start'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Kategorie'} value={list_formel.cat} name={'cat'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Unterkategorie'} value={list_formel.subcat}\n                               name={'subcat'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Bearbeitungsvariante'}\n                               value={list_formel.variant} name ={'variant'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setid} placeholder={list_formel.status} value={list_formel.status}\n                            name={'status'} onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Felgentemperatur'}\n                               value={list_formel.temp_air} name={'temp_air'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.fl_id} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}\n                               name={'pressure'} className={'fl_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}\n                               name={'pressure'} className={'fr_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.bl_id} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}\n                               name={'pressure'} className={'bl_pressure'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.br_id} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}\n                               name={'pressure'} className={'fl_pressure'} onChange={this.save_changes_wheel}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed initial'}\n                               value={list_formel.bleed_initial} name={'bleed_initial'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'bleed hot'} value={list_formel.bleed_hot}\n                               name={'bleed_hot'}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}\n                        onChange={this.save_changes_wheelSet}>\n                        <input id={list_formel.setNr} placeholder={'Heiztemperatur'} value={list_formel.temp_heat}\n                               name={'temp_heat'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizdauer'} value={list_formel.heat_duration}\n                               name={'heat_duration'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizstart'} value={list_formel.heat_start}\n                               name={'heat_start'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setNr} placeholder={'Heizende'} value={list_formel.heat_end}\n                               name={'heat_end'} onChange={this.save_changes_wheelSet}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Zeit der Messung'}\n                               value={list_formel.heat_press_timestamp} name={'heat_press_timestamp'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.fl_id} placeholder={'Warmdruck FL'}\n                               value={list_formel.fl_hot_air_press} className={'fl_hot_air_press'} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'Warmdruck FR'}\n                               value={list_formel.fr_hot_air_press} className={'fr_hot_air_press'} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.bl_id} placeholder={'Warmdruck BL'}\n                               value={list_formel.bl_hot_air_press} className={'bl_hot_air_press'} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.br_id} placeholder={'Warmdruck BR'}\n                               value={list_formel.br_hot_air_press} className={'br_hot_air_press'} name={'hot_air_press'}\n                               onChange={this.save_changes_wheel}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Target vorne'}\n                               value={list_formel.heat_press_front} name={'heat_press_front'}\n                               onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.setid} placeholder={'Target hinten'}\n                               value={list_formel.heat_press_back} name={'heat_press_back'}\n                               onChange={this.save_changes_wheelSet}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'nicht gebleedet'} value={list_formel.gebleedet}\n                               name={'gebleedet'} onChange={this.save_changes_wheelSet}/>\n                        <input id={list_formel.fl_id} placeholder={'Bleed FL'} value={list_formel.fl_bleed_press}\n                               name={'bleed_press'} className={'fl_bleed_press'}  onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'Bleed FR'} value={list_formel.fr_bleed_press}\n                               name={'bleed_press'} className={'fr_bleed_press'}  onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.bl_id} placeholder={'Bleed BL'} value={list_formel.bl_bleed_press}\n                               name={'bleed_press'} className={'bl_bleed_press'}  onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.br_id} placeholder={'Bleed BR'} value={list_formel.br_bleed_press}\n                               name={'bleed_press'} className={'br_bleed_press'} onChange={this.save_changes_wheel}/>\n                    </td>\n\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'ID FL'} value={list_formel.fl_id_scan}\n                               name={'id_scan'} className={'fl_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.fr_id} placeholder={'ID FR'} value={list_formel.fr_id_scan}\n                               name={'id_scan'} className={'fr_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.bl_id} placeholder={'ID BL'} value={list_formel.bl_id_scan}\n                               name={'id_scan'} className={'bl_id_scan'} onChange={this.save_changes_wheel}/>\n                        <input id={list_formel.br_id} placeholder={'ID BR'} value={list_formel.br_id_scan}\n                               name={'id_scan'} className={'br_id_scan'}  onChange={this.save_changes_wheel}/></td>\n                </tr>\n            )\n\n        })\n    }\n\n    renderTableData2() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={'Tabelle2'}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setid} placeholder={'Setbezeichnung'} value={list_formel.description}\n                        name={'description'} onChange={this.save_changes_wheelSet} />\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setid} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}  /></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Heiztemperatur'} value={list_formel.temp_heat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Heizdauer'} value={list_formel.heat_duration}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Heizstart'} value={list_formel.heat_start}/>\n                        <input type=\"button\" value=\"HEIZEN STARTEN\" onClick={this.handleHeatStart}/>\n                    </td>\n\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setid} placeholder={'Heizende'} value={list_formel.heat_end}/></td>\n\n                </tr>\n            )\n\n        })\n\n    }\n\n    renderTableData3() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Kategorie'} value={list_formel.cat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Unterkategorie'} value={list_formel.subcat}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={list_formel.status} value={list_formel.status}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={list_formel.runtime} value={list_formel.runtime}/>\n                    </td>\n\n                </tr>\n            )\n\n        })\n    }\n\n    renderTableData4() {\n        console.log(this.state.list_formel)\n        return this.state.list_formel.map((list_formel, index) => {\n            //const { n, formel } =list_formel //destructuring\n            return (\n                <tr bgcolor='#696969'\n                    style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={list_formel.setNr}>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Setbezeichnung'} value={list_formel.description}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input\n                            id={list_formel.setNr} placeholder={'Datum und Uhrzeit'}\n                            value={list_formel.order_start}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Felgentemperatur'}\n                               value={list_formel.temp_air}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed initial'}\n                               value={list_formel.bleed_initial}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'bleed hot'} value={list_formel.bleed_hot}/></td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FL'} value={list_formel.fl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck FR'} value={list_formel.fr_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BL'} value={list_formel.bl_pressure}/>\n                        <input id={list_formel.setNr} placeholder={'Kaltdruck BR'} value={list_formel.br_pressure}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Zeit der Messung'}\n                               value={list_formel.heat_press_timestamp}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FL'}\n                               value={list_formel.fl_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck FR'}\n                               value={list_formel.fr_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BL'}\n                               value={list_formel.bl_hot_air_press}/>\n                        <input id={list_formel.setNr} placeholder={'Warmdruck BR'}\n                               value={list_formel.br_hot_air_press}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Target vorne'}\n                               value={list_formel.heat_press_front}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'Target hinten'}\n                               value={list_formel.heat_press_back}/>\n                    </td>\n                    <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 100, padding: '8px'}}>\n                        <input id={list_formel.setNr} placeholder={'nicht gebleedet'} value={list_formel.gebleedet}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FL'} value={list_formel.fl_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed FR'} value={list_formel.fr_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BL'} value={list_formel.bl_bleed_press}/>\n                        <input id={list_formel.setNr} placeholder={'Bleed BR'} value={list_formel.br_bleed_press}/>\n                    </td>\n\n                </tr>\n            )\n\n        })\n    }\n\n\n    changeView = event => {\n        this.setState({selectedView: event.target.value});\n    }\n\n    render() {\n        let optionTemplate = this.state.dataViews.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n        ));\n        return (\n            <View style={{overflowY: 'scroll', overflowX: 'scroll', flex: 1}}>\n                <h1>{this.state.selectedView}</h1>\n                <label style={{fontSize: 16, fontFamily: 'arial', textAlign: 'center'}}> Ansicht: <select\n                    value={this.state.selectedView} onChange={this.changeView}>\n                    {optionTemplate}\n                </select>\n                </label>\n                <Text style={{height: 20}}>Dropdownliste, Set auswählen von Rennen</Text>\n                <Text style={{height: 20}}>Tabelle, alle Attribute des Sets in editierbarer Tabelle</Text>\n\n\n                <div>\n                    <h1 id='title'>Angelegte Reifen</h1>\n                    <table id='list_formel'>\n                        <tbody>\n                        {this.renderTableHeader()}\n                        {this.state.selectedView == 1 && this.renderTableData()}\n                        {this.state.selectedView == 2 && this.renderTableData2()}\n                        {this.state.selectedView == 3 && this.renderTableData3()}\n                        {this.state.selectedView == 4 && this.renderTableData4()}\n                        </tbody>\n                    </table>\n                </div>\n                <Text style={{height: 20}}></Text>\n                <Button\n                    title=\"zurück\"\n                    onPress={this.changeRace}\n                />\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}