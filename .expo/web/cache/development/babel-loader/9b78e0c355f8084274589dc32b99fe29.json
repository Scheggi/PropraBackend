{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/toni/PycharmProjects/PropraSource/frontend/WeatherScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { styles } from \"./styles\";\nimport { getRaceList, getWeatherTab, timeoutPromise, getWheelsList, getRaceDetails_by_ID, getHourlyForecastByLocationName } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Table from \"./Table\";\nimport TouchHistoryMath from \"react-native/Libraries/Interaction/TouchHistoryMath\";\nimport RenderApiData from \"./RenderApiData\";\n\nvar WeatherScreen = function (_React$Component) {\n  _inherits(WeatherScreen, _React$Component);\n\n  var _super = _createSuper(WeatherScreen);\n\n  function WeatherScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WeatherScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.sleep = function (milliseconds) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, milliseconds);\n      });\n    };\n\n    _this.state = {\n      dataRace: [],\n      raceID: 0,\n      raceList: [],\n      dataWeather: [],\n      listWheelStart: [],\n      RaceDetails: [],\n      apiWeatherData: [],\n      apiWeatherData_Parsed: [],\n      raceLocation: \"\",\n      raceDate: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(WeatherScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(this.getRaceDetails());\n\n            case 2:\n              console.log(this.state.RaceDetails);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this.getWeatherData());\n\n            case 5:\n              console.log(this.state.dataWeather);\n              this.sleep(2000).then(function (r) {\n                _this2.getWeatherByWeatherCom();\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"parseApiData\",\n    value: function parseApiData() {\n      if (this.state.RaceDetails[0] != null && this.state.apiWeatherData != null && this.state.apiWeatherData != undefined) {\n        console.log(this.state.apiWeatherData);\n        var race_date = this.state.RaceDetails[0].date;\n        var dateEntries = [];\n        itemArray.map(function (item) {\n          var date_object = new Date(item.date);\n          var day = date_object.getDate().toString();\n\n          if (day.length == 1) {\n            day = \"0\" + day;\n          }\n\n          var month = (date_object.getMonth() + 1).toString();\n\n          if (month.length == 1) {\n            month = \"0\" + month;\n          }\n\n          var year = date_object.getFullYear().toString();\n          var form_res = day + \".\" + month + \".\" + year;\n\n          if (race_date == form_res) {\n            var datetime = date_object.toString();\n            var weatherText = item.weather.text;\n            var rainProb = item.prec.probability;\n            var tempAverage = item.temperature.avg;\n            var windDirection = item.wind.direction;\n            var windSpeed = item.wind.avg;\n            dateEntries.push(datetime);\n            dateEntries.push(weatherText);\n            dateEntries.push(rainProb);\n            dateEntries.push(tempAverage);\n            dateEntries.push(windDirection);\n            dateEntries.push(windSpeed);\n          }\n        });\n        return dateEntries;\n      }\n    }\n  }, {\n    key: \"getWeatherByWeatherCom\",\n    value: function getWeatherByWeatherCom() {\n      var _this3 = this;\n\n      var date, location;\n      return _regeneratorRuntime.async(function getWeatherByWeatherCom$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              date = this.state.RaceDetails[0].date;\n              location = this.state.RaceDetails[0].place;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(this.getHourlyForecastByLocationName(location).then(function (data) {\n                console.log(data);\n                console.log(_this3.state.apiWeatherData);\n\n                _this3.setState({\n                  apiWeatherData: data\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 4:\n              console.log(this.state.apiWeatherData);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getHourlyForecastByLocationName\",\n    value: function getHourlyForecastByLocationName(location) {\n      return _regeneratorRuntime.async(function getHourlyForecastByLocationName$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              fetch(\"https://forecast9.p.rapidapi.com/rapidapi/forecast/\" + location + \"/hourly/\", {\n                \"method\": \"GET\",\n                \"headers\": {\n                  \"x-rapidapi-host\": \"forecast9.p.rapidapi.com\",\n                  \"x-rapidapi-key\": \"2b8430ac95msh6035f288b7f2b81p1f2f5ejsnd3de235ba3ff\"\n                }\n              }).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                console.log(data);\n                console.log(data['forecast']);\n                return [data['forecast']];\n              }).catch(function (err) {\n                console.error(err);\n                return ['iwas'];\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getRaceDetails\",\n    value: function getRaceDetails() {\n      var _this4 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getRaceDetails$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context4.sent;\n              _context4.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context4.sent;\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(getRaceDetails_by_ID(accesstoken, raceID).then(function (liste) {\n                _this4.setState({\n                  RaceDetails: liste\n                });\n\n                console.log(liste);\n\n                _this4.setState({\n                  raceLocation: liste[0].date,\n                  raceDate: liste[0].place\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n              console.log(this.state.RaceDetails);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getWheelsStart\",\n    value: function getWheelsStart() {\n      var _this5 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWheelsStart$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context5.sent;\n              _context5.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context5.sent;\n              getWheelsList(accesstoken, raceID).then(function (liste) {\n                console.log(liste);\n\n                _this5.setState({\n                  listWheelStart: liste\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWeatherData\",\n    value: function getWeatherData() {\n      var _this6 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getWeatherData$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context6.sent;\n              _context6.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context6.sent;\n              console.log(raceID);\n              getWeatherTab(accesstoken, raceID).then(function (DataTabular) {\n                _this6.setState({\n                  dataWeather: DataTabular\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 8:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"renderTableData\",\n    value: function renderTableData() {\n      var _this7 = this;\n\n      console.log(this.state.dataWeather);\n      return this.state.dataWeather.map(function (dataWeather, index) {\n        var temp_ground = dataWeather.temp_ground,\n            temp_air = dataWeather.temp_air,\n            datetime = dataWeather.datetime,\n            weather_des = dataWeather.weather_des;\n        return React.createElement(\"tr\", {\n          bgcolor: \"#d3d3d3\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            fontFamily: 'arial'\n          },\n          key: temp_ground,\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }\n        }, React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 15,\n            width: 150,\n            padding: '8px'\n          },\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 16\n          }\n        }, datetime), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          },\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 16\n          }\n        }, temp_air), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          },\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }\n        }, temp_ground), React.createElement(\"td\", {\n          style: {\n            border: \"solid\",\n            borderColor: 'grey',\n            height: 20,\n            width: 150,\n            padding: '8px',\n            textAlign: 'center'\n          },\n          __self: _this7,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }\n        }, weather_des));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(\"test: \", this.state.apiWeatherData_Parsed);\n      return React.createElement(View, {\n        style: viewStyles1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }\n      }, React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, React.createElement(\"h1\", {\n        style: {\n          fontSize: 30,\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          textAlign: 'center'\n        },\n        id: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }\n      }, \"Wetterdaten\"), React.createElement(\"table\", {\n        style: {\n          overflowY: 'scroll'\n        },\n        id: \"list_formel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, React.createElement(\"thead\", {\n        bgcolor: \"#808080\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white',\n          fontFamily: 'arial'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }\n      }, React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }\n      }, React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 25,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 33\n        }\n      }, \"Zeitstempel\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }\n      }, \"Lufttemperatur\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 33\n        }\n      }, \"Streckentemperatur\"), React.createElement(\"th\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'grey',\n          height: 20,\n          width: 150,\n          padding: '8px',\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 33\n        }\n      }, \"Streckenverh\\xE4ltnis\"))), React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, this.renderTableData()))), React.createElement(ScrollView, {\n        style: {\n          left: \"550px\",\n          top: \"-10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, React.createElement(RenderApiData, {\n        list: this.parseApiData(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: {\n          width: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return WeatherScreen;\n}(React.Component);\n\nexport { WeatherScreen as default };\nvar viewStyles1 = {\n  flex: 1,\n  alignItems: 'center',\n  justifyContent: 'center',\n  fontFamily: 'arial',\n  overflowY: 'scroll'\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/WeatherScreen.js"],"names":["React","styles","getRaceList","getWeatherTab","timeoutPromise","getWheelsList","getRaceDetails_by_ID","getHourlyForecastByLocationName","AsyncStorage","Icon","Table","TouchHistoryMath","RenderApiData","WeatherScreen","props","changeRace","event","preventDefault","navigation","goBack","sleep","milliseconds","Promise","resolve","setTimeout","state","dataRace","raceID","raceList","dataWeather","listWheelStart","RaceDetails","apiWeatherData","apiWeatherData_Parsed","raceLocation","raceDate","getRaceDetails","console","log","getWeatherData","then","r","getWeatherByWeatherCom","undefined","race_date","date","dateEntries","itemArray","map","item","date_object","Date","day","getDate","toString","length","month","getMonth","year","getFullYear","form_res","datetime","weatherText","weather","text","rainProb","prec","probability","tempAverage","temperature","avg","windDirection","wind","direction","windSpeed","push","location","place","data","setState","catch","error","fetch","response","json","err","getItem","accesstoken","liste","DataTabular","index","temp_ground","temp_air","weather_des","textAlign","padding","fontFamily","border","borderColor","height","width","viewStyles1","fontSize","marginRight","marginLeft","overflowY","color","renderTableData","left","top","parseApiData","Component","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Image,\n    TextInput,\n    TouchableHighlight,\n    SectionList,\n    TouchableOpacity,\n    ScrollView,\n} from 'react-native';\nimport {styles} from \"./styles\"\nimport {getRaceList, getWeatherTab, timeoutPromise,getWheelsList,getRaceDetails_by_ID, getHourlyForecastByLocationName} from \"./tools\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {Button} from \"react-native-web\";\nimport Table from \"./Table\";\nimport TouchHistoryMath from \"react-native/Libraries/Interaction/TouchHistoryMath\";\nimport RenderApiData from \"./RenderApiData\";\n\nexport default class WeatherScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataRace: [],\n            raceID :0,\n            raceList:[],\n            dataWeather: [],\n            listWheelStart:[],\n            RaceDetails:[],\n            apiWeatherData: [],\n            apiWeatherData_Parsed: [],\n            raceLocation: \"\",\n            raceDate: \"\",\n        }\n\n    }\n\n    // navigate to Main Menue\n     changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n\n\n    async componentDidMount() {\n        await this.getRaceDetails();\n        console.log(this.state.RaceDetails)\n        await this.getWeatherData();\n        console.log(this.state.dataWeather)\n\n        this.sleep(2000).then(r => {\n            this.getWeatherByWeatherCom();\n        })\n    }\n\n  \n\n    parseApiData() {\n\n\n        if(this.state.RaceDetails[0] != null && this.state.apiWeatherData != null && this.state.apiWeatherData != undefined) {\n\n\n            console.log(this.state.apiWeatherData)\n            const race_date = this.state.RaceDetails[0].date\n            //const itemArray = \n\n            const dateEntries = []\n\n            itemArray.map(function(item){\n                const date_object = new Date(item.date)\n\n                var day = (date_object.getDate()).toString()\n                if(day.length == 1) {day = `0${day}`}\n\n                var month = ((date_object.getMonth())+1).toString()\n                if(month.length == 1) {month = `0${month}`}\n\n                var year = (date_object.getFullYear()).toString()\n\n                var form_res = `${day}.${month}.${year}`\n\n                if(race_date == form_res) {\n                    var datetime = (date_object).toString();\n                    var weatherText = item.weather.text;\n                    var rainProb = item.prec.probability;\n                    var tempAverage = item.temperature.avg;\n                    var windDirection = item.wind.direction;\n                    var windSpeed = item.wind.avg;\n\n                    dateEntries.push(datetime)\n                    dateEntries.push(weatherText)\n                    dateEntries.push(rainProb)\n                    dateEntries.push(tempAverage)\n                    dateEntries.push(windDirection)\n                    dateEntries.push(windSpeed)\n                        \n                } \n            });\n\n            return dateEntries;\n        }\n\n    }\n\n\n\n\n    async getWeatherByWeatherCom() {\n        const date = this.state.RaceDetails[0].date\n        const location = this.state.RaceDetails[0].place\n        await this.getHourlyForecastByLocationName(location).then(data => {\n            console.log(data)\n            console.log(this.state.apiWeatherData)\n            this.setState({apiWeatherData: data});\n\n        }).catch(function (error) {\n            console.log(error);\n        })\n\n        console.log(this.state.apiWeatherData)\n    }\n\n    // test\n    async getHourlyForecastByLocationName(location) {\n        fetch(`https://forecast9.p.rapidapi.com/rapidapi/forecast/${location}/hourly/`, {\n            \"method\": \"GET\",\n            \"headers\": {\n                \"x-rapidapi-host\": \"forecast9.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"2b8430ac95msh6035f288b7f2b81p1f2f5ejsnd3de235ba3ff\"\n            },\n        })\n        .then(response => response.json()).then(data =>{\n            console.log(data);\n            console.log(data['forecast'])\n            return [data['forecast']]\n        })\n        .catch(err => {\n            console.error(err);\n            return ['iwas']\n        });\n    }\n\n\n\n    //get RaceDetails by RaceID\n    async getRaceDetails(){\n\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getRaceDetails_by_ID(accesstoken,raceID).then(liste => {\n            this.setState({RaceDetails: liste});\n            console.log(liste)\n            this.setState({\n                raceLocation: liste[0].date,\n                raceDate : liste[0].place,\n            })\n        }).catch(error=> {\n            console.log(error);\n        })\n\n        console.log(this.state.RaceDetails)\n\n\n\n\n    }\n\n    //get ReifenData\n    async getWheelsStart(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        getWheelsList(accesstoken,raceID).then(liste => {\n            console.log(liste);\n            this.setState({listWheelStart: liste});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n\n    //get Weather Data, it will be used in getRaceID\n    async getWeatherData(){\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\n       const raceID = await AsyncStorage.getItem('raceID');\n       console.log(raceID)\n       getWeatherTab(accesstoken, raceID).then(DataTabular => {\n                this.setState({dataWeather: DataTabular});\n            }).catch(function (error) {\n                console.log(error);\n            })\n\n    }\n\n    //Tabular Weather Data\n    renderTableData() {\n        console.log(this.state.dataWeather)\n        return this.state.dataWeather.map((dataWeather, index) => {\n            const { temp_ground,temp_air,datetime,weather_des } =dataWeather //destructuring\n            return (\n            <tr bgcolor='#d3d3d3' style={{textAlign: \"left\", padding: '8px', fontFamily: 'arial'}} key={temp_ground}>\n               <td style={{border: \"solid\", borderColor: 'grey', height: 15, width: 150, padding: '8px'}} >{datetime}</td>\n               <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{temp_air}</td>\n                <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{temp_ground}</td>\n                <td style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}} >{weather_des}</td>\n            </tr>\n         )\n      })\n   }\n\n    render() {\n\n        console.log(\"test: \", this.state.apiWeatherData_Parsed)\n\n        return (\n\n            <View style={viewStyles1}>\n\n                <div>\n\n                    <h1 style={{fontSize: 30, marginRight: 'auto', marginLeft: 'auto', textAlign: 'center'}} id='title'>Wetterdaten</h1>\n\n                    <table style={{overflowY: 'scroll'}} id='list_formel'>\n\n                        <thead bgcolor='#808080' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}>\n                            <tr>\n                                <th style={{border: \"solid\", borderColor: 'grey', height: 25, width: 150, padding: '8px',textAlign: 'center'}}>Zeitstempel</th>\n                                <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}}>Lufttemperatur</th>\n                                <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}}>Streckentemperatur</th>\n                                <th style={{border: \"solid\", borderColor: 'grey', height: 20, width: 150, padding: '8px', textAlign: 'center'}}>Streckenverhältnis</th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {this.renderTableData()}\n                        </tbody>\n\n                    </table>\n\n                </div>\n\n                <ScrollView style={{left: \"550px\", top: \"-10%\"}}>\n                    <RenderApiData list={this.parseApiData()}/>\n                </ScrollView>\n\n                <View style={{width: 200}}>\n                    <Text style={{height: 20}}></Text>\n                    <Button title=\"zurück\" onPress={this.changeRace}/>\n                </View>\n\n            </View>\n\n        );\n    }\n}\nconst viewStyles1= {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontFamily: 'arial',\n        overflowY: 'scroll',\n    };\n"]},"metadata":{},"sourceType":"module"}