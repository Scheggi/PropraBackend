{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, syncData, getRaceList, getFormelList } from \"./tools\";\n\nvar NewFormelScreen = function (_React$Component) {\n  _inherits(NewFormelScreen, _React$Component);\n\n  var _super = _createSuper(NewFormelScreen);\n\n  function NewFormelScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewFormelScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.goBack();\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      console.log(_this.state.raceID);\n      console.log(_this.state.variable1);\n      console.log(_this.state.variable2);\n      console.log(_this.state.variable3);\n      console.log(_this.state.variable4);\n    };\n\n    _this.handleSubmit1 = function (event) {\n      event.preventDefault();\n      console.log(_this.state.airTemperature);\n      console.log(_this.state.trackTemperature);\n      console.log(_this.state.air_pressureFL);\n      console.log(_this.state.air_pressureFR);\n      console.log(_this.state.air_pressureBL);\n      console.log(_this.state.air_pressureBR);\n    };\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      console.log(id);\n\n      _this.setState({\n        raceID: id\n      });\n    };\n\n    _this.state = {\n      raceList: [],\n      raceID: -1,\n      variable1: \"\",\n      variable2: \"\",\n      variable3: \"\",\n      variable4: \"\",\n      air_pressureFL: \"\",\n      air_pressureFR: \"\",\n      air_pressureBL: \"\",\n      air_pressureBR: \"\",\n      airTemperature: \"\",\n      trackTemperature: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(NewFormelScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.raceID != -1 && this.state.variable1 != \"\" && this.state.variable2 != \"\" && this.state.variable3 != \"\" && this.state.variable4 != \"\";\n    }\n  }, {\n    key: \"validateForm1\",\n    value: function validateForm1() {\n      return this.state.raceID != -1 && this.state.airTemperature != \"\" && this.state.trackTemperature != \"\" && this.state.air_pressureFL != \"\" && this.state.air_pressureFR != \"\" && this.state.air_pressureBL != \"\" && this.state.air_pressureBR != \"\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                console.log(racelistDropdown);\n\n                _this2.setState({\n                  raceList: racelistDropdown\n                });\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(View, {\n        style: {\n          overflowY: 'scroll',\n          flex: 1\n        }\n      }, React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"h1\", null, \"Formel und Kaltdruck-Orientierungswerte eintragen\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: '70%'\n        }\n      }, React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \"Rennen ausw\\xE4hlen:\"), React.createElement(\"select\", {\n        id: \"option\",\n        style: {\n          margin: 10,\n          fontFamily: 'arial'\n        },\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(\"br\", null), React.createElement(\"div\", {\n        className: \"alert alert-secondary\",\n        role: \"alert\"\n      }, \"Pa = angegebener Kaltdruck, Tg = gemessene Temperatur, Ta = angegebene Temperatur\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        style: {\n          width: '70%'\n        }\n      }, React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \"Pa*(Tg+\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            variable1: e.target.value\n          });\n        },\n        value: this.state.variable1\n      }), React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \")/(Ta+\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            variable2: e.target.value\n          });\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \")+(\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            variable3: e.target.value\n          });\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \")*(Tg-Ta)/(Ta+\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        \"aria-label\": \"Server\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            variable4: e.target.value\n          });\n        }\n      }), React.createElement(\"span\", {\n        className: \"input-group-text\"\n      }, \")\"), React.createElement(\"button\", {\n        disabled: !this.validateForm(),\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit\n      }, \"Formel speichern\")), React.createElement(\"br\", null), React.createElement(\"div\", {\n        className: \"row g-3\"\n      }, React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"label\", {\n        className: \"form-label\"\n      }, \"Air Temperature\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.airTemperature,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            airTemperature: e.target.value\n          });\n        }\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"label\", {\n        className: \"form-label\"\n      }, \"Track Temperature\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        value: this.state.trackTemperature,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            trackTemperature: e.target.value\n          });\n        },\n        required: true\n      })), React.createElement(\"div\", {\n        className: \"col-md-6\"\n      }, React.createElement(\"label\", {\n        className: \"form-label\"\n      }, \"Cold TP\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \" air_pressureFL\",\n        value: this.state.air_pressureFL,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            air_pressureFL: e.target.value\n          });\n        },\n        required: true\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \" air_pressureFR\",\n        value: this.state.air_pressureFR,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            air_pressureFR: e.target.value\n          });\n        },\n        required: true\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \" air_pressureBL\",\n        value: this.state.air_pressureBL,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            air_pressureBL: e.target.value\n          });\n        },\n        required: true\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \" air_pressureBR\",\n        value: this.state.air_pressureBR,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            air_pressureBR: e.target.value\n          });\n        },\n        required: true\n      })), React.createElement(\"div\", {\n        className: \"col-12\"\n      }, React.createElement(\"button\", {\n        disabled: !this.validateForm1(),\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.handleSubmit1\n      }, \"Daten speichern\")))), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return NewFormelScreen;\n}(React.Component);\n\nexport { NewFormelScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewFormel.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","syncData","getRaceList","getFormelList","NewFormelScreen","props","changeRace","event","preventDefault","navigation","goBack","handleSubmit","console","log","state","raceID","variable1","variable2","variable3","variable4","handleSubmit1","airTemperature","trackTemperature","air_pressureFL","air_pressureFR","air_pressureBL","air_pressureBR","getRaceID","id","target","value","setState","raceList","getItem","accesstoken","then","racelistDropdown","catch","error","optionTemplate","map","v","name","overflowY","flex","width","margin","fontFamily","e","validateForm","validateForm1","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\n//import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken, syncData, getRaceList,getFormelList} from \"./tools\";\n\nexport default class NewFormelScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            raceList:[],\n            raceID: -1,\n            variable1: \"\",\n            variable2: \"\",\n            variable3: \"\",\n            variable4: \"\",\n            air_pressureFL: \"\",\n            air_pressureFR: \"\",\n            air_pressureBL: \"\",\n            air_pressureBR: \"\",\n            airTemperature: \"\",\n            trackTemperature: \"\",\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.goBack();\n    }\n\n    validateForm() {\n        return this.state.raceID!=-1&&this.state.variable1!=\"\"&&this.state.variable2!=\"\"&&this.state.variable3!=\"\"&&this.state.variable4!=\"\";\n\n    }\n    validateForm1(){\n        return this.state.raceID!=-1&&this.state.airTemperature!=\"\"&&this.state.trackTemperature!=\"\"&&this.state.air_pressureFL!=\"\"&&this.state.air_pressureFR!=\"\"&&this.state.air_pressureBL!=\"\"&&this.state.air_pressureBR!=\"\";\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        console.log(this.state.raceID);\n        console.log(this.state.variable1);\n        console.log(this.state.variable2);\n        console.log(this.state.variable3);\n        console.log(this.state.variable4);\n\n    }\n\n     handleSubmit1 = event => {\n        event.preventDefault();\n        console.log(this.state.airTemperature);\n        console.log(this.state.trackTemperature);\n        console.log(this.state.air_pressureFL);\n        console.log(this.state.air_pressureFR);\n        console.log(this.state.air_pressureBL);\n        console.log(this.state.air_pressureBR);\n\n\n    }\n\n\n\n    async componentDidMount() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        getRaceList(accesstoken).then(racelistDropdown => {\n            console.log(racelistDropdown);\n            this.setState({raceList: racelistDropdown});\n        }).catch(function (error) {\n            console.log(error);\n        });\n        }\n getRaceID = event =>{\n        const id = event.target.value;\n         console.log(id);\n        this.setState({raceID: id});\n    }\n\n\n\n    render() {\n     let optionTemplate = this.state.raceList.map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n\n    ));\n\n     return(\n         <View style={{ overflowY: 'scroll', flex:1}}>\n             <div className=\"container\" >\n         <h1>Formel und Kaltdruck-Orientierungswerte eintragen</h1>\n           <div className=\"input-group\" style={{width:'70%'}}>\n              <span className=\"input-group-text\">Rennen auswählen:</span>\n            <select  id='option' style={{margin: 10, fontFamily: 'arial'}} value={this.state.id} onChange={this.getRaceID}>{optionTemplate}</select>\n           </div>\n             <br></br>\n             <div className=\"alert alert-secondary\" role=\"alert\">\n                 Pa = angegebener Kaltdruck, Tg = gemessene Temperatur, Ta = angegebene Temperatur\n             </div>\n           <div className=\"input-group\" style={{width:'70%'}}>\n                 <span className=\"input-group-text\">Pa*(Tg+</span>\n                 <input type=\"text\" className=\"form-control\"  aria-label=\"Server\"   onChange={(e) => this.setState({variable1: e.target.value})} value={this.state.variable1}></input>\n                  <span className=\"input-group-text\">)/(Ta+</span>\n                 <input type=\"text\" className=\"form-control\"  aria-label=\"Server\"  onChange={(e) => this.setState({variable2: e.target.value})}></input>\n                 <span className=\"input-group-text\">)+(</span>\n                  <input type=\"text\" className=\"form-control\"  aria-label=\"Server\" onChange={(e) => this.setState({variable3: e.target.value})}></input>\n                  <span className=\"input-group-text\">)*(Tg-Ta)/(Ta+</span>\n                 <input type=\"text\" className=\"form-control\"  aria-label=\"Server\"  onChange={(e) => this.setState({variable4: e.target.value})}></input>\n                 <span className=\"input-group-text\">)</span>\n                 <button disabled={!this.validateForm()} type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit}>Formel speichern</button>\n             </div>\n             <br></br>\n             <div className=\"row g-3\">\n             <div className=\"col-md-6\">\n                 <label  className=\"form-label\">Air Temperature</label>\n                 <input type=\"text\" className=\"form-control\" value={this.state.airTemperature} onChange={(e) => this.setState({airTemperature: e.target.value})}></input>\n             </div>\n             <div className=\"col-md-6\">\n                 <label className=\"form-label\">Track Temperature</label>\n                 <input type=\"text\" className=\"form-control\"  value={this.state.trackTemperature} onChange={(e) => this.setState({trackTemperature: e.target.value})} required></input>\n             </div>\n              <div className=\"col-md-6\">\n                 <label className=\"form-label\">Cold TP</label>\n                 <input type=\"text\" className=\"form-control\"  placeholder=\" air_pressureFL\" value={this.state.air_pressureFL} onChange={(e) => this.setState({air_pressureFL: e.target.value})} required></input>\n                  <input type=\"text\" className=\"form-control\"  placeholder=\" air_pressureFR\" value={this.state.air_pressureFR} onChange={(e) => this.setState({air_pressureFR: e.target.value})} required></input>\n                   <input type=\"text\" className=\"form-control\"   placeholder=\" air_pressureBL\" value={this.state.air_pressureBL} onChange={(e) => this.setState({air_pressureBL: e.target.value})} required></input>\n                   <input type=\"text\" className=\"form-control\"  placeholder=\" air_pressureBR\" value={this.state.air_pressureBR} onChange={(e) => this.setState({air_pressureBR: e.target.value})} required></input>\n             </div>\n               <div className=\"col-12\">\n               <button disabled={!this.validateForm1()} type=\"button\" className=\"btn btn-primary\" onClick={this.handleSubmit1}>Daten speichern</button>\n               </div>\n             </div>\n             </div>\n             <Button\n                        title=\"zurück\"\n                        onPress={this.changeRace}\n                />\n        </View>\n\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}