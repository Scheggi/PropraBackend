{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList } from \"./tools\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewOrderRequest(_this.state.raceid, _this.state.tyretype, _this.state.tyremix, _this.state.term, _this.state.variant, _this.state.number, _this.state.orderdate, _this.state.ordertime, _this.state.pickuptime);\n    };\n\n    _this.state = {\n      raceid: '',\n      tyretype: '',\n      tyremix: '',\n      term: '',\n      variant: '',\n      number: '',\n      orderdate: '',\n      ordertime: '',\n      pickuptime: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.raceid.length > 0;\n    }\n  }, {\n    key: \"sendNewOrderRequest\",\n    value: function sendNewOrderRequest(raceid, tyretype, tyremix, term, variant, number, orderdate, ordertime, pickuptime) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewOrderRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/order/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  raceid: raceid,\n                  tyretype: tyretype,\n                  tyremix: tyremix,\n                  term: term,\n                  variant: variant,\n                  number: number,\n                  orderdate: orderdate,\n                  ordertime: ordertime,\n                  pickuptime: pickuptime\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  _this2.props.navigation.replace('Race');\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: bigStyle\n      }, \"24h-Rennen\"), React.createElement(Text, {\n        style: subStyle\n      }, \"Neue Reifenbestellung anlegen\"), React.createElement(View, null, React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Renn-ID: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \"\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            raceid: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Reifenart: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \"\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyretype: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Mischung: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \"\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            tyremix: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Bezeichnung: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \"\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            term: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Bearbeitungsvariante: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \"\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            variant: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Anzahl Reifens\\xE4tze: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" 1\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            number: text\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Bestelldatum: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" TT.MM.JJJJ\",\n        onChangeText: function onChangeText(date) {\n          return _this3.setState({\n            orderdate: date\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Bestellzeit: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this3.setState({\n            ordertime: time\n          });\n        }\n      }), React.createElement(Text, {\n        style: emptylineStyle\n      }, \" \"), React.createElement(Text, {\n        style: orderHeaderStyle\n      }, \" Abholzeit: \"), React.createElement(TextInput, {\n        style: orderTextStyle,\n        placeholder: \" SS:MM\",\n        onChangeText: function onChangeText(time) {\n          return _this3.setState({\n            pickuptime: time\n          });\n        }\n      }), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Reifenbestellung aufgeben\",\n        onPress: this.handleSubmit\n      }), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };\nvar bigStyle = {\n  color: 'black',\n  fontSize: 30,\n  fontWeight: 'bold'\n};\nvar subStyle = {\n  fontSize: 20,\n  height: 60\n};\nvar emptylineStyle = {\n  height: 20,\n  backgroundColor: '#ffffff'\n};\nvar orderHeaderStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#696969',\n  color: '#ffffff',\n  fontweight: 'bold',\n  fontSize: 16\n};\nvar orderTextStyle = {\n  height: 40,\n  width: 300,\n  margin: 3,\n  borderWidth: 1,\n  padding: 10,\n  backgroundColor: '#d3d3d3',\n  fontSize: 14\n};","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","NewOrderScreen","props","changeRace","event","preventDefault","navigation","replace","handleSubmit","sendNewOrderRequest","state","raceid","tyretype","tyremix","term","variant","number","orderdate","ordertime","pickuptime","length","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","viewStyles","bigStyle","subStyle","orderHeaderStyle","orderTextStyle","text","setState","emptylineStyle","date","time","validateForm","Component","color","fontSize","fontWeight","height","backgroundColor","width","margin","borderWidth","padding","fontweight"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList} from \"./tools\";\n\nexport default class NewOrderScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            raceid: '',\n            tyretype: '',\n            tyremix: '',\n            term: '',\n            variant: '',\n            number: '',\n            orderdate: '',\n            ordertime: '',\n            pickuptime: ''\n        }\n    }\n\n    changeRace = event => {\n        event.preventDefault();\n        this.props.navigation.replace('Race');\n    }\n\n\n    validateForm() {\n        return this.state.raceid.length > 0 ;\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewOrderRequest(this.state.raceid, this.state.tyretype, this.state.tyremix, this.state.term,\n            this.state.variant, this.state.number, this.state.orderdate, this.state.ordertime, this.state.pickuptime);\n    }\n    async sendNewOrderRequest(raceid,tyretype,tyremix,term,variant,number,orderdate,ordertime,pickuptime) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/order/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    raceid:raceid,\n                    tyretype:tyretype,\n                    tyremix:tyremix,\n                    term:term,\n                    variant:variant,\n                    number:number,\n                    orderdate:orderdate,\n                    ordertime:ordertime,\n                    pickuptime:pickuptime\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    this.props.navigation.replace('Race');\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <View style={styles.viewStyles}>\n                <Text style={bigStyle}>\n                    24h-Rennen\n                </Text>\n                 <Text style={subStyle}>\n                    Neue Reifenbestellung anlegen\n                </Text>\n                <View >\n                    <Text style={orderHeaderStyle}> Renn-ID: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\"\"\n                        onChangeText={(text) => this.setState({raceid:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Reifenart: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\"\"\n                        onChangeText={(text) => this.setState({tyretype:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Mischung: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\"\"\n                        onChangeText={(text) => this.setState({tyremix:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Bezeichnung: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\"\"\n                        onChangeText={(text) => this.setState({term:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                     <Text style={orderHeaderStyle}> Bearbeitungsvariante: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\"\"\n                        onChangeText={(text) => this.setState({variant:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Anzahl Reifensätze: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\" 1\"\n                        onChangeText={(text) => this.setState({number:text})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Bestelldatum: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\" TT.MM.JJJJ\"\n                        onChangeText={(date) => this.setState({orderdate:date})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Bestellzeit: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\" SS:MM\"\n                        onChangeText={(time) => this.setState({ordertime:time})}\n                    />\n                    <Text style={emptylineStyle}> </Text>\n                    <Text style={orderHeaderStyle}> Abholzeit: </Text>\n                    <TextInput\n                        style={orderTextStyle}\n                        placeholder=\" SS:MM\"\n                        onChangeText={(time) => this.setState({pickuptime:time})}\n                    />\n                    <Button\n                        disabled={!this.validateForm()}\n                        title=\"Reifenbestellung aufgeben\"\n                        onPress={this.handleSubmit}\n                    />\n                    <Button\n                        title=\"zurück\"\n                        onPress={this.changeRace}\n                    />\n\n                </View>\n\n            </View>\n        );\n    }\n}\n\nconst bigStyle = {\n    color: 'black',\n    fontSize: 30,\n    fontWeight: 'bold'\n}\n\nconst subStyle = {\n    fontSize: 20,\n    height: 60\n}\n\nconst emptylineStyle = {\n    height: 20,\n    backgroundColor: '#ffffff',\n}\n\nconst orderHeaderStyle = {\n    height: 40,\n    width: 300,\n    margin: 3,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#696969',\n    color: '#ffffff',\n    fontweight: 'bold',\n    fontSize: 16\n};\n\nconst orderTextStyle = {\n    height: 40,\n    width: 300,\n    margin: 3,\n    borderWidth: 1,\n    padding: 10,\n    backgroundColor: '#d3d3d3',\n    fontSize: 14\n};"]},"metadata":{},"sourceType":"module"}