{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { getRaceList, timeoutPromise, getWeatherTab } from \"./tools\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { getWheelSetInformation as _getWheelSetInformation } from \"./tools_get_wheels\";\nimport { logToConsole } from \"react-native/Libraries/Utilities/RCTLog\";\n\nvar RaceScreen = function (_React$Component) {\n  _inherits(RaceScreen, _React$Component);\n\n  var _super = _createSuper(RaceScreen);\n\n  function RaceScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RaceScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeLogout = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Logout');\n    };\n\n    _this.changeNewRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('NewRace');\n    };\n\n    _this.changeNewUser = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('NewUser');\n    };\n\n    _this.changeFormel = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Formel');\n    };\n\n    _this.changeNewOrder = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('NewOrder');\n    };\n\n    _this.changeWeather = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Weather');\n    };\n\n    _this.changeShowRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('ShowRace');\n    };\n\n    _this.changeWheel = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Wheel');\n    };\n\n    _this.changeNewFormel = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('NewFormel');\n    };\n\n    _this.changeAstrid = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Astrid');\n    };\n\n    _this.changeNiklas = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Niklas');\n    };\n\n    _this.changeMaen = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.push('Maen');\n    };\n\n    _this.getRaceID = function (event) {\n      var id = event.target.value;\n      AsyncStorage.setItem(\"raceID\", event.target.value);\n\n      _this.saveRaceIDinState();\n    };\n\n    _this.state = {\n      dataRace: [],\n      dataWeather: [],\n      raceID: false,\n      raceList: [],\n      ReturnedWheelInformations: [],\n      timeWeather: 0,\n      timeOrder: 0,\n      timeHeating: 0,\n      timeWeatherG: '00:00:00',\n      timeOrderG: '00:00:00',\n      timeHeatingG: '00:00:00'\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(RaceScreen, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      if (this.timer == 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    }\n  }, {\n    key: \"countDown\",\n    value: function countDown() {\n      var secondsWeather = this.state.timeWeather - 1;\n      var secondsOrder = this.state.timeOrder - 1;\n      var secondsHeating = this.state.timeHeating - 1;\n\n      if (secondsWeather < 0) {\n        secondsWeather += 1;\n      }\n\n      if (secondsOrder < 0) {\n        secondsOrder += 1;\n      }\n\n      if (secondsHeating < 0) {\n        secondsHeating += 1;\n      }\n\n      this.setState({\n        timeWeather: secondsWeather,\n        timeWeatherG: this.secondsToTime(secondsWeather),\n        timeOrder: secondsOrder,\n        timeOrderG: this.secondsToTime(secondsOrder),\n        timeHeating: secondsHeating,\n        timeHeatingG: this.secondsToTime(secondsHeating)\n      });\n    }\n  }, {\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      if (secs <= 0) {\n        return '00:00:00';\n      }\n\n      var hours = Math.floor(secs / (60 * 60));\n      var divisor_for_minutes = secs % (60 * 60);\n      var minutes = Math.floor(divisor_for_minutes / 60);\n      var divisor_for_seconds = divisor_for_minutes % 60;\n      var seconds = Math.ceil(divisor_for_seconds);\n\n      if (hours.toString().length == 1) {\n        hours = \"0\" + hours;\n      }\n\n      if (minutes.toString().length == 1) {\n        minutes = \"0\" + minutes;\n      }\n\n      if (seconds.toString().length == 1) {\n        seconds = \"0\" + seconds;\n      }\n\n      var obj = hours + \":\" + minutes + \":\" + seconds;\n      return obj;\n    }\n  }, {\n    key: \"compute_Order_Heating_TimerSeconds\",\n    value: function compute_Order_Heating_TimerSeconds(tmp, duration) {\n      var tmpInSeconds = new Date(Date.parse(tmp)).getTime() / 1000;\n      var nowDate = new Date().getTime() / 1000;\n      var result = Math.floor(tmpInSeconds - nowDate);\n\n      if (result <= 0) {\n        return 0;\n      }\n\n      return Math.floor(tmpInSeconds - nowDate);\n    }\n  }, {\n    key: \"getSecondsToNextMeasurement\",\n    value: function getSecondsToNextMeasurement(ttemp) {\n      if (ttemp == null) {\n        return;\n      }\n\n      var lastDate = new Date(Date.parse(ttemp.datetime)).getTime() / 1000;\n      var nowDate = new Date().getTime() / 1000;\n      var result = 1800 - Math.floor(nowDate - lastDate);\n\n      if (result > 0) {\n        this.setState({\n          timeWeather: result\n        });\n      }\n    }\n  }, {\n    key: \"getWeatherData\",\n    value: function getWeatherData(raceID) {\n      var _this2 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getWeatherData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              getWeatherTab(accesstoken, raceID).then(function (DataTabular) {\n                _this2.setState({\n                  dataWeather: DataTabular\n                });\n\n                _this2.getSecondsToNextMeasurement(_this2.state.dataWeather[_this2.state.dataWeather.length - 1]);\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              getRaceList(accesstoken).then(function (racelistDropdown) {\n                _this3.setState({\n                  raceList: racelistDropdown\n                });\n\n                _this3.setState({\n                  raceID: _this3.state.raceList[0].id\n                });\n\n                if (_this3.state.raceID != false) {\n                  _this3.getWeatherData(_this3.state.raceID);\n\n                  _this3.getWheelSetInformation(_this3.state.raceID);\n\n                  _this3.startTimer();\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getWheelSetInformation\",\n    value: function getWheelSetInformation(raceID) {\n      var _this4 = this;\n\n      var accesstoken;\n      return _regeneratorRuntime.async(function getWheelSetInformation$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n\n              _getWheelSetInformation(accesstoken, raceID).then(function (DataTabular) {\n                _this4.setState({\n                  ReturnedWheelInformations: DataTabular\n                });\n\n                var orderStart;\n                var orderDuration;\n                var heatStart;\n                var heatDuration;\n                Object.keys(DataTabular).forEach(function (key) {\n                  if (key = 'order_start') {\n                    orderStart = DataTabular[key];\n                  }\n\n                  if (key = 'order_duration') {\n                    orderDuration = DataTabular[key];\n                  }\n\n                  if (key = 'heat_start') {\n                    heatStart = DataTabular[key];\n                  }\n\n                  if (key = 'heat_duration') {\n                    heatDuration = DataTabular[key];\n                  }\n                });\n\n                if (orderStart != null && orderDuration != null) {\n                  _this4.setState({\n                    timeOrder: _this4.compute_Order_Heating_TimerSeconds(orderStart, orderDuration)\n                  });\n                }\n\n                if (heatStart != null && heatDuration != null) {\n                  _this4.setState({\n                    timeHeating: _this4.compute_Order_Heating_TimerSeconds(heatStart, heatDuration)\n                  });\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"saveRaceIDinState\",\n    value: function saveRaceIDinState() {\n      var id;\n      return _regeneratorRuntime.async(function saveRaceIDinState$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"raceID\"));\n\n            case 2:\n              id = _context4.sent;\n              clearInterval(this.timer);\n              this.timer = 0;\n              this.setState({\n                timeWeather: 0,\n                timeWeatherG: '00:00:00',\n                timeHeating: 0,\n                timeHeatingG: '00:00:00',\n                timeOrder: 0,\n                timeOrderG: '00:00:00'\n              });\n              this.setState({\n                raceID: id\n              });\n              this.getWeatherData(id);\n              this.getWheelSetInformation(id);\n              this.startTimer();\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optionTemplate = this.state.raceList.map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var styles = StyleSheet.create({\n        mainContainer: {\n          flex: 1,\n          flexDirection: 'row'\n        },\n        timerContainer: {\n          alignItems: 'center',\n          width: '30%',\n          height: '100%'\n        },\n        textStyle: {\n          margin: 10,\n          fontFamily: 'arial',\n          fontSize: 25\n        },\n        buttonContainer: {\n          flex: 0.7,\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontFamily: 'arial'\n        }\n      });\n      return React.createElement(View, {\n        style: styles.mainContainer\n      }, React.createElement(View, {\n        style: styles.timerContainer\n      }, React.createElement(Text, {\n        style: styles.textStyle\n      }, \"Wetterdaten messen:\"), React.createElement(Text, {\n        style: styles.textStyle\n      }, this.state.timeWeatherG), React.createElement(Text, {\n        style: styles.textStyle\n      }, \"Felgen werden noch geheizt f\\xFCr:\"), React.createElement(Text, {\n        style: styles.textStyle\n      }, this.state.timeHeatingG), React.createElement(Text, {\n        style: styles.textStyle\n      }, \"Reifen zur Abholung bereit in:\"), React.createElement(Text, {\n        style: styles.textStyle\n      }, this.state.timeOrderG)), React.createElement(View, {\n        style: styles.buttonContainer\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 30\n        }\n      }, \"Reifenmanagement\"), React.createElement(Text, {\n        style: {\n          height: 30\n        }\n      }, \" \"), React.createElement(\"label\", {\n        style: {\n          fontSize: 16\n        }\n      }, \" Rennen ausw\\xE4hlen: \", React.createElement(\"select\", {\n        value: this.state.id,\n        onChange: this.getRaceID\n      }, optionTemplate)), React.createElement(View, {\n        style: {\n          width: 300\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Neue Renndaten anlegen\",\n        onPress: this.changeNewRace\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Renndaten anzeigen\",\n        onPress: this.changeShowRace\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Reifenbestellungen verwalten\",\n        onPress: this.changeNewOrder\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Reifendetails anzeigen\",\n        onPress: this.changeWheel\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Wetterdaten anzeigen\",\n        onPress: this.changeWeather\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Formel Reifendruck anlegen\",\n        onPress: this.changeFormel\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Neues Mitglied anlegen\",\n        onPress: this.changeNewUser\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Neue Formel anlegen\",\n        onPress: this.changeNewFormel\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Astrid anzeigen\",\n        onPress: this.changeAstrid\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Niklas\",\n        onPress: this.changeNiklas\n      }), React.createElement(Text, {\n        style: {\n          height: 10\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Maen anzeigen\",\n        onPress: this.changeMaen\n      })), React.createElement(View, {\n        style: {\n          width: 200\n        }\n      }, React.createElement(Text, {\n        style: {\n          height: 40\n        }\n      }, \" \"), React.createElement(Button, {\n        title: \"Logout\",\n        onPress: this.changeLogout\n      }))));\n    }\n  }]);\n\n  return RaceScreen;\n}(React.Component);\n\nexport { RaceScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/RaceScreen.js"],"names":["React","getRaceList","timeoutPromise","getWeatherTab","AsyncStorage","Icon","getWheelSetInformation","logToConsole","RaceScreen","props","changeLogout","event","preventDefault","navigation","replace","changeNewRace","push","changeNewUser","changeFormel","changeNewOrder","changeWeather","changeShowRace","changeWheel","changeNewFormel","changeAstrid","changeNiklas","changeMaen","getRaceID","id","target","value","setItem","saveRaceIDinState","state","dataRace","dataWeather","raceID","raceList","ReturnedWheelInformations","timeWeather","timeOrder","timeHeating","timeWeatherG","timeOrderG","timeHeatingG","timer","startTimer","bind","countDown","setInterval","secondsWeather","secondsOrder","secondsHeating","setState","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","toString","length","obj","tmp","duration","tmpInSeconds","Date","parse","getTime","nowDate","result","ttemp","lastDate","datetime","getItem","accesstoken","then","DataTabular","getSecondsToNextMeasurement","catch","error","console","log","racelistDropdown","getWeatherData","orderStart","orderDuration","heatStart","heatDuration","Object","keys","forEach","key","compute_Order_Heating_TimerSeconds","clearInterval","optionTemplate","map","v","name","styles","StyleSheet","create","mainContainer","flex","flexDirection","timerContainer","alignItems","width","height","textStyle","margin","fontFamily","fontSize","buttonContainer","justifyContent","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    View,\r\n    Text,\r\n    StyleSheet,\r\n    Image,\r\n    TextInput,\r\n    TouchableHighlight,\r\n    SectionList,\r\n    TouchableOpacity\r\n} from 'react-native';\r\n\r\nimport {getRaceList, timeoutPromise, getWeatherTab} from \"./tools\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {Button} from \"react-native-web\";\r\nimport {getWheelSetInformation} from \"./tools_get_wheels\"\r\nimport { logToConsole } from \"react-native/Libraries/Utilities/RCTLog\";\r\n\r\n\r\nexport default class RaceScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataRace: [],\r\n            dataWeather:[],\r\n            raceID : false,\r\n            raceList:[],\r\n\r\n            ReturnedWheelInformations:[],\r\n\r\n            timeWeather: 0,\r\n            timeOrder: 0,\r\n            timeHeating: 0,\r\n\r\n            timeWeatherG: '00:00:00',\r\n            timeOrderG: '00:00:00',\r\n            timeHeatingG: '00:00:00',\r\n        }\r\n\r\n        this.timer = 0;\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    startTimer() {\r\n        if (this.timer == 0) {\r\n            this.timer = setInterval(this.countDown, 1000);\r\n        }\r\n    }\r\n\r\n    countDown() {\r\n        let secondsWeather = this.state.timeWeather-1;\r\n        let secondsOrder = this.state.timeOrder-1;\r\n        let secondsHeating = this.state.timeHeating-1;\r\n\r\n        if(secondsWeather < 0) {secondsWeather+=1}\r\n        if(secondsOrder < 0) {secondsOrder+=1}\r\n        if(secondsHeating < 0) {secondsHeating+=1}\r\n\r\n        this.setState({\r\n\r\n            timeWeather: secondsWeather,\r\n            timeWeatherG: this.secondsToTime(secondsWeather),\r\n            timeOrder: secondsOrder,\r\n            timeOrderG: this.secondsToTime(secondsOrder),\r\n            timeHeating: secondsHeating,\r\n            timeHeatingG: this.secondsToTime(secondsHeating),\r\n\r\n            });\r\n    }\r\n\r\n    secondsToTime(secs){\r\n\r\n        if(secs <= 0) {return '00:00:00'}\r\n\r\n        let hours = Math.floor(secs / (60 * 60));\r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        if(hours.toString().length == 1) {hours = `0${hours}`}\r\n        if(minutes.toString().length == 1) {minutes = `0${minutes}`}\r\n        if(seconds.toString().length == 1) {seconds = `0${seconds}`}\r\n\r\n        let obj = `${hours}:${minutes}:${seconds}`;\r\n        return obj \r\n    }\r\n\r\n    compute_Order_Heating_TimerSeconds(tmp, duration) {\r\n        let tmpInSeconds = (new Date(Date.parse(tmp)).getTime() / 1000)\r\n        let nowDate = (new Date().getTime() / 1000)\r\n        let result = Math.floor(tmpInSeconds - nowDate)\r\n\r\n        if(result <= 0) {return 0}\r\n        return Math.floor(tmpInSeconds - nowDate)\r\n    }\r\n\r\n    getSecondsToNextMeasurement(ttemp) {\r\n\r\n        if(ttemp == null) {\r\n            return;\r\n        }\r\n\r\n        let lastDate = (new Date(Date.parse(ttemp.datetime)).getTime() / 1000)\r\n        let nowDate = (new Date().getTime() / 1000)\r\n        let result = 1800 - Math.floor(nowDate - lastDate)\r\n\r\n        if(result > 0) {\r\n            this.setState({timeWeather: result})\r\n        }\r\n    }\r\n\r\n    async getWeatherData(raceID){\r\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n       getWeatherTab(accesstoken, raceID).then(DataTabular => {\r\n                this.setState({dataWeather: DataTabular});\r\n                this.getSecondsToNextMeasurement(this.state.dataWeather[this.state.dataWeather.length-1])\r\n\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n        getRaceList(accesstoken).then(racelistDropdown => {\r\n            this.setState({raceList: racelistDropdown});\r\n            this.setState({raceID: this.state.raceList[0].id})\r\n\r\n            if(this.state.raceID != false) {\r\n                this.getWeatherData(this.state.raceID)\r\n                this.getWheelSetInformation(this.state.raceID)\r\n                this.startTimer()\r\n            }\r\n\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n\r\n    }\r\n\r\n    async getWheelSetInformation(raceID){\r\n       const accesstoken = await AsyncStorage.getItem('accesstoken');\r\n       getWheelSetInformation(accesstoken, raceID).then(DataTabular => {\r\n            this.setState({ReturnedWheelInformations: DataTabular});\r\n        \r\n\r\n            var orderStart;\r\n            var orderDuration;\r\n            var heatStart;\r\n            var heatDuration;\r\n\r\n            Object.keys(DataTabular).forEach((key) => {\r\n                if(key = 'order_start') {orderStart = DataTabular[key]}\r\n                if(key = 'order_duration') {orderDuration = DataTabular[key]}\r\n                if(key = 'heat_start') {heatStart = DataTabular[key]}\r\n                if(key = 'heat_duration') {heatDuration = DataTabular[key]}\r\n            });\r\n\r\n            //heatStart = '27 Jan 2022 20:40:56 GMT'\r\n            //heatDuration = 1800\r\n\r\n            //orderStart = '27 Jan 2022 20:37:46 GMT'\r\n            //orderDuration = 1800\r\n\r\n            if(orderStart != null && orderDuration != null) {\r\n                this.setState({\r\n                    timeOrder: this.compute_Order_Heating_TimerSeconds(orderStart, orderDuration)\r\n                });\r\n            }\r\n\r\n            if(heatStart != null && heatDuration != null) {\r\n                this.setState({\r\n                    timeHeating: this.compute_Order_Heating_TimerSeconds(heatStart, heatDuration)\r\n                });\r\n            }\r\n\r\n        }).catch(function (error) {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    changeLogout = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.replace('Logout');\r\n    }\r\n\r\n    changeNewRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('NewRace');\r\n    }\r\n\r\n     changeNewUser = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('NewUser');\r\n    }\r\n\r\n     changeFormel = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Formel');\r\n    }\r\n\r\n    changeNewOrder = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('NewOrder');\r\n    }\r\n\r\n\r\n    changeWeather = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Weather');\r\n    }\r\n\r\n    changeShowRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('ShowRace');\r\n    }\r\n\r\n     changeWheel = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Wheel');\r\n    }\r\n\r\n    changeNewFormel = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('NewFormel');\r\n    }\r\n\r\n    changeAstrid = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Astrid');\r\n    }\r\n\r\n    changeNiklas = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Niklas');\r\n    }\r\n\r\n    changeMaen = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.push('Maen');\r\n    }\r\n\r\n    async saveRaceIDinState() {\r\n        const id = await AsyncStorage.getItem(\"raceID\");\r\n\r\n        clearInterval(this.timer);\r\n        this.timer = 0;\r\n\r\n        this.setState({\r\n\r\n            timeWeather: 0,\r\n            timeWeatherG: '00:00:00',\r\n            timeHeating: 0,\r\n            timeHeatingG: '00:00:00',\r\n            timeOrder: 0,\r\n            timeOrderG: '00:00:00',\r\n\r\n        });\r\n\r\n        this.setState({raceID: id});\r\n        this.getWeatherData(id);\r\n        this.getWheelSetInformation(id);\r\n        this.startTimer();\r\n    }\r\n\r\n    getRaceID = event => {\r\n        const id = event.target.value;\r\n        AsyncStorage.setItem(\"raceID\",event.target.value);\r\n        this.saveRaceIDinState();\r\n    }\r\n\r\n    render() {\r\n        let optionTemplate = this.state.raceList.map(v => (\r\n            <option value={v.id} key={v.id}>{v.name}</option>\r\n        ));\r\n\r\n    const styles = StyleSheet.create ({\r\n        mainContainer: {\r\n            flex: 1,\r\n            flexDirection: 'row',\r\n        },\r\n\r\n        timerContainer: {\r\n            alignItems: 'center',\r\n            width: '30%',\r\n            height: '100%',\r\n        },\r\n\r\n        textStyle: {\r\n            margin: 10,\r\n            fontFamily: 'arial',\r\n            fontSize: 25,\r\n        },\r\n\r\n        buttonContainer: {\r\n            flex: 0.7,\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            fontFamily: 'arial',\r\n        },\r\n    });\r\n\r\n        return (\r\n            <View style={styles.mainContainer}>\r\n                <View style={styles.timerContainer}>\r\n                <Text style={styles.textStyle}>Wetterdaten messen:</Text>\r\n                <Text style={styles.textStyle}>{this.state.timeWeatherG}</Text>\r\n                <Text style={styles.textStyle}>Felgen werden noch geheizt für:</Text>\r\n                <Text style={styles.textStyle}>{this.state.timeHeatingG}</Text>\r\n                <Text style={styles.textStyle}>Reifen zur Abholung bereit in:</Text>\r\n                <Text style={styles.textStyle}>{this.state.timeOrderG}</Text>\r\n                </View>\r\n\r\n                <View style={styles.buttonContainer}>\r\n                <Text style={{fontSize: 30, fontWeight: 30}}>Reifenmanagement</Text>\r\n                <Text style={{height: 30}}> </Text>\r\n                <label style={{fontSize: 16}}> Rennen auswählen: <select value={this.state.id} onChange={this.getRaceID}>\r\n                  {optionTemplate}\r\n                </select>\r\n                </label>\r\n\r\n                <View style={{width: 300}}>\r\n                  <Text style={{height: 20}}> </Text>\r\n                <Button\r\n                    title=\"Neue Renndaten anlegen\"\r\n                    onPress={this.changeNewRace}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                  title=\"Renndaten anzeigen\"\r\n                    onPress={this.changeShowRace}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Reifenbestellungen verwalten\"\r\n                    onPress={this.changeNewOrder}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Reifendetails anzeigen\"\r\n                    onPress={this.changeWheel}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Wetterdaten anzeigen\"\r\n                    onPress={this.changeWeather}\r\n                />\r\n                 <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Formel Reifendruck anlegen\"\r\n                    onPress={this.changeFormel}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Neues Mitglied anlegen\"\r\n                    onPress={this.changeNewUser}\r\n                />\r\n                <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                    title=\"Neue Formel anlegen\"\r\n                    onPress={this.changeNewFormel}\r\n                />\r\n                 <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                title=\"Astrid anzeigen\"\r\n                onPress={this.changeAstrid}\r\n                />\r\n                 <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                  title=\"Niklas\"\r\n                    onPress={this.changeNiklas}\r\n                />\r\n                 <Text style={{height: 10}}> </Text>\r\n                <Button\r\n                  title=\"Maen anzeigen\"\r\n                    onPress={this.changeMaen}\r\n                />\r\n                </View>\r\n                <View style={{width: 200}}>\r\n                <Text style={{height: 40}}> </Text>\r\n                <Button\r\n                    title=\"Logout\"\r\n                    onPress={this.changeLogout}\r\n                />\r\n                </View>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}