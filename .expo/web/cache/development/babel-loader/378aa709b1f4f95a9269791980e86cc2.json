{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, syncData } from \"./tools\";\n\nvar NewUserScreen = function (_React$Component) {\n  _inherits(NewUserScreen, _React$Component);\n\n  var _super = _createSuper(NewUserScreen);\n\n  function NewUserScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewUserScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      event.preventDefault();\n\n      _this.props.navigation.replace('Race');\n    };\n\n    _this.state = {\n      firsname: '',\n      lastname: '',\n      username: '',\n      password: '',\n      group: 'Helper'\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(NewUserScreen, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        group: event.target.group\n      });\n    }\n  }, {\n    key: \"handleSubmitDrop\",\n    value: function handleSubmitDrop(event) {\n      alert('group is: ' + this.state.group);\n      event.preventDefault();\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.username.length > 0 && this.state.password.length > 0;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.sendNewRaceRequest(this.state.username, this.state.firstname, this.state.lastname, this.state.password, this.state.group);\n    }\n  }, {\n    key: \"sendNewRaceRequest\",\n    value: function sendNewRaceRequest(username, firstname, lastname, password, group) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewRaceRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(group);\n              timeoutPromise(2000, fetch('https://api.race24.cloud/user/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  username: username,\n                  first_name: firstname,\n                  last_name: lastname,\n                  password: password,\n                  group: group\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  console.log(data[0]);\n\n                  _this2.props.navigation.replace('Race');\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"Neues Mitglied anlegen\"), React.createElement(View, null, React.createElement(Text, {\n        style: {\n          height: 30\n        }\n      }, \" \"), React.createElement(\"form\", null, React.createElement(\"label\", {\n        style: {\n          fontSize: 16\n        }\n      }, \"Gruppe:\", React.createElement(\"select\", {\n        group: this.state.group,\n        onChange: function onChange(text) {\n          return _this3.setState({\n            group: text.target.value\n          });\n        }\n      }, React.createElement(\"option\", {\n        group: \"Helfer\"\n      }, \"Helfer\"), React.createElement(\"option\", {\n        group: \"Manager\"\n      }, \"Manager\"), React.createElement(\"option\", {\n        group: \"Ingenieur\"\n      }, \"Ingenieur\")))), React.createElement(Text, {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(\"table\", null, React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Vorname: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.type,\n        placeholder: \"Vorname\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            firstname: text.trim()\n          });\n        }\n      }))), React.createElement(\"tr\", {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Nachname: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.place,\n        placeholder: \" Nachname\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            lastname: text.trim()\n          });\n        }\n      }))), React.createElement(\"tr\", {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Username: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, React.createElement(TextInput, {\n        value: this.state.type,\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            username: text.trim()\n          });\n        }\n      }))), React.createElement(\"tr\", {\n        style: {\n          height: 20\n        }\n      }, \" \"), React.createElement(\"tr\", null, React.createElement(\"td\", {\n        bgcolor: \"#696969\",\n        style: {\n          textAlign: \"left\",\n          padding: '8px',\n          color: 'white'\n        }\n      }, React.createElement(\"label\", null, \" Passwort: \")), React.createElement(\"td\", {\n        style: {\n          border: \"solid\",\n          borderColor: 'dimgrey',\n          height: 20,\n          width: 150,\n          padding: '8px'\n        }\n      }, \" \", React.createElement(TextInput, {\n        value: this.state.place,\n        secureTextEntry: true,\n        placeholder: \"Passwort\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            password: text\n          });\n        }\n      })))), React.createElement(Text, {\n        style: {\n          height: 40\n        }\n      }, \" \"), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"neues Mitglied anlegen\",\n        onPress: this.handleSubmit\n      }), React.createElement(Text, null, \" \"), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      })));\n    }\n  }]);\n\n  return NewUserScreen;\n}(React.Component);\n\nexport { NewUserScreen as default };","map":{"version":3,"sources":["C:/Users/Niklas/Desktop/frontend/NewUser.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","syncData","NewUserScreen","props","changeRace","event","preventDefault","navigation","replace","state","firsname","lastname","username","password","group","handleChange","bind","handleSubmit","setState","target","alert","length","sendNewRaceRequest","firstname","console","log","fetch","method","headers","body","JSON","stringify","first_name","last_name","then","response","json","data","catch","error","viewStyles","textStyles","height","fontSize","text","value","textAlign","padding","color","border","borderColor","width","type","trim","place","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\r\nimport {styles} from \"./styles\"\r\n//import { AsyncStorage } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {timeoutPromise, refreshToken, syncData} from \"./tools\";\r\n\r\nexport default class NewUserScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firsname: '',\r\n            lastname: '',\r\n            username: '',\r\n            password: '',\r\n            group: 'Helper',\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(event) { this.setState({group: event.target.group});  }\r\n    handleSubmitDrop(event) {\r\n        alert('group is: ' + this.state.group);\r\n    event.preventDefault();\r\n    }\r\n\r\n    /*\r\n    getRaceId(){\r\n        var today = new Date();\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        var yyyy = today.getFullYear();\r\n        today = dd+mm+yyyy;\r\n        this.state.date = dd+\".\"+mm+\".\"+yy;\r\n        this.state.id = parseInt(today);\r\n    }\r\n    */\r\n\r\n        changeRace = event => {\r\n        event.preventDefault();\r\n        this.props.navigation.replace('Race');\r\n    }\r\n\r\n    validateForm() {\r\n        return this.state.username.length > 0 && this.state.password.length > 0  ;\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        this.sendNewRaceRequest(this.state.username, this.state.firstname,this.state.lastname,\r\n            this.state.password,this.state.group);\r\n    }\r\n    async sendNewRaceRequest(username,firstname,lastname,password,group) {\r\n        console.log(group);\r\n       timeoutPromise(2000, fetch(\r\n            'https://api.race24.cloud/user/create', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username: username,\r\n                    first_name: firstname,\r\n                    last_name:lastname,\r\n                    password:password,\r\n                    group:group,\r\n                })\r\n            })\r\n            ).then(response => response.json()).then(data => {\r\n                if (data[1]==200) {\r\n                    console.log(data[0])\r\n                    this.props.navigation.replace('Race');\r\n                }\r\n                else {\r\n                    console.log(\"failed\")\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <View style={styles.viewStyles}>\r\n                <Text style={styles.textStyles}>\r\n                    Neues Mitglied anlegen\r\n                </Text>\r\n\r\n                <View >\r\n                    <Text style={{height: 30}}> </Text>\r\n                    <form >\r\n                        <label style={{fontSize: 16}}>\r\n                          Gruppe:\r\n                          <select group={this.state.group} onChange={(text) => this.setState({group:text.target.value})}>\r\n                            <option group=\"Helfer\">Helfer</option>\r\n                            <option group=\"Manager\">Manager</option>\r\n                            <option group=\"Ingenieur\">Ingenieur</option>\r\n                          </select>\r\n                        </label>\r\n                    </form>\r\n                    <Text style={{height: 20}}> </Text>\r\n                    <table>\r\n                    <tr>\r\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Vorname: </label></td>\r\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.type}\r\n                                   placeholder=\"Vorname\" onChangeText={(text) => this.setState({firstname:text.trim()})}/></td>\r\n                    </tr>\r\n                     <tr style={{height: 20}}> </tr>\r\n                    <tr>\r\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Nachname: </label></td>\r\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.place}\r\n                                    placeholder=\" Nachname\" onChangeText={(text) => this.setState({lastname:text.trim()})}/>\r\n                        </td>\r\n                    </tr>\r\n                           <tr style={{height: 20}}> </tr>\r\n                         <tr>\r\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Username: </label></td>\r\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}><TextInput value={this.state.type}\r\n                                   placeholder=\"Username\" onChangeText={(text) => this.setState({username:text.trim()})}/></td>\r\n                    </tr>\r\n                     <tr style={{height: 20}}> </tr>\r\n                    <tr>\r\n                        <td bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white'}}><label> Passwort: </label></td>\r\n                        <td style={{border: \"solid\", borderColor: 'dimgrey', height: 20, width: 150, padding: '8px'}}> <TextInput value={this.state.place}\r\n                                    secureTextEntry={true} placeholder=\"Passwort\" onChangeText={(text) => this.setState({password:text})}/>\r\n                        </td>\r\n                    </tr>\r\n                    </table>\r\n                    <Text style={{height: 40}}> </Text>\r\n                    <Button\r\n                        disabled={!this.validateForm()}\r\n                        title=\"neues Mitglied anlegen\"\r\n                        onPress={this.handleSubmit}\r\n                    />\r\n                    <Text> </Text>\r\n                        <Button\r\n                            title=\"zurück\"\r\n                            onPress={this.changeRace}\r\n                            />\r\n                </View>\r\n\r\n            </View>\r\n        );\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}