{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, getRaceList, changeWheelSet } from \"./tools\";\nimport { get_Dict_WheelOrder, getDropdown, getWheelSetInformation, getOrderDropdown, getWheelInformations } from \"./tools_get_wheels\";\n\nvar NewOrderScreen = function (_React$Component) {\n  _inherits(NewOrderScreen, _React$Component);\n\n  var _super = _createSuper(NewOrderScreen);\n\n  function NewOrderScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewOrderScreen);\n\n    _this = _super.call(this, props);\n\n    _this.changeRace = function (event) {\n      _this.props.navigation.goBack();\n    };\n\n    _this.state = {\n      raceID: 0,\n      wheels: [],\n      list_wheels: [],\n      dictButtons: [],\n      dropdownlist: [],\n      ButtonsList: ['Slicks Cold', 'Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet']\n    };\n    return _this;\n  }\n\n  _createClass(NewOrderScreen, [{\n    key: \"getTabularData\",\n    value: function getTabularData() {\n      var _this2 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getTabularData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getWheelInformations(accesstoken, raceID).then(function (Tab) {\n                _this2.setState({\n                  list_wheels: Tab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"getDropdownData\",\n    value: function getDropdownData() {\n      var _this3 = this;\n\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function getDropdownData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context2.sent;\n              _context2.next = 8;\n              return _regeneratorRuntime.awrap(getOrderDropdown(accesstoken, raceID).then(function (Tab) {\n                _this3.setState({\n                  dropdownlist: Tab\n                });\n              }).catch(function (error) {\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accesstoken, raceID;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('accesstoken'));\n\n            case 2:\n              accesstoken = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('raceID'));\n\n            case 5:\n              raceID = _context3.sent;\n              console.log(raceID);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(this.getWheelDict());\n\n            case 9:\n              console.log(this.state.list_wheels);\n              _context3.next = 12;\n              return _regeneratorRuntime.awrap(this.getDropdownData());\n\n            case 12:\n              console.log(this.state.dropdownlist);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"renderTableHeader\",\n    value: function renderTableHeader() {\n      var header = ['Slicks Cold', 'Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet'];\n      return header.map(function (key, index) {\n        return React.createElement(\"th\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: index\n        }, key.toUpperCase());\n      });\n    }\n  }, {\n    key: \"renderTableOrderCat\",\n    value: function renderTableOrderCat() {\n      var _this4 = this;\n\n      return this.state.ButtonsList.map(function (buttons, index) {\n        return React.createElement(\"tr\", {\n          bgcolor: \"#696969\",\n          style: {\n            textAlign: \"left\",\n            padding: '8px',\n            color: 'white',\n            fontFamily: 'arial'\n          },\n          key: '1Tabelle'\n        }, React.createElement(\"td\", null, React.createElement(\"label\", {\n          style: {\n            fontSize: 16,\n            fontFamily: 'arial',\n            textAlign: 'center'\n          }\n        }, \" Ansicht: \", React.createElement(\"select\", {\n          value: _this4.state.selectedView,\n          onChange: _this4.changeView\n        }, optionTemplate))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var optiondropdown1 = this.state.dropdownlist[0].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var optiondropdown2 = this.state.dropdownlist[1].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var optiondropdown3 = this.state.dropdownlist[2].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var optiondropdown4 = this.state.dropdownlist[3].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var optiondropdown5 = this.state.dropdownlist[4].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      var optiondropdown6 = this.state.dropdownlist[5].map(function (v) {\n        return React.createElement(\"option\", {\n          value: v.id,\n          key: v.id\n        }, v.name);\n      });\n      return React.createElement(ScrollView, null, React.createElement(View, null, React.createElement(Text, {\n        style: {\n          fontSize: 30,\n          fontWeight: 'bold',\n          textAlign: 'center'\n        }\n      }, \"Neue Reifenbestellung anlegen\")), React.createElement(Button, {\n        title: \"zur\\xFCck\",\n        onPress: this.changeRace\n      }));\n    }\n  }]);\n\n  return NewOrderScreen;\n}(React.Component);\n\nexport { NewOrderScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewOrder.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","changeWheelSet","get_Dict_WheelOrder","getDropdown","getWheelSetInformation","getOrderDropdown","getWheelInformations","NewOrderScreen","props","changeRace","event","navigation","goBack","state","raceID","wheels","list_wheels","dictButtons","dropdownlist","ButtonsList","getItem","accesstoken","then","Tab","setState","catch","error","console","log","getWheelDict","getDropdownData","header","map","key","index","textAlign","padding","color","fontFamily","toUpperCase","buttons","fontSize","selectedView","changeView","optionTemplate","optiondropdown1","v","id","name","optiondropdown2","optiondropdown3","optiondropdown4","optiondropdown5","optiondropdown6","fontWeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid,ScrollView, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList,changeWheelSet} from \"./tools\";\nimport {get_Dict_WheelOrder, getDropdown,getWheelSetInformation,getOrderDropdown,getWheelInformations} from \"./tools_get_wheels\";\n\nexport default class NewOrderScreen extends React.Component {\n   constructor(props) {\n        super(props);\n        this.state = {\n            raceID: 0,\n            wheels: [],\n            list_wheels : [],\n            dictButtons:[],\n            dropdownlist : [],\n            ButtonsList : ['Slicks Cold','Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet'],\n        }\n    }\n\n     changeRace = event => {\n        this.props.navigation.goBack();\n    }\n\n     async getTabularData() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getWheelInformations(accesstoken, raceID).then(Tab => {\n            this.setState({list_wheels: Tab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n    async getDropdownData() {\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        await getOrderDropdown(accesstoken, raceID).then(Tab => {\n            this.setState({dropdownlist: Tab});\n        }).catch(function (error) {\n            console.log(error);\n        })\n    }\n\n     async componentDidMount(){\n        const accesstoken = await AsyncStorage.getItem('accesstoken');\n        const raceID = await AsyncStorage.getItem('raceID');\n        console.log(raceID)\n        await this.getWheelDict();\n        console.log(this.state.list_wheels)\n        await this.getDropdownData();\n        console.log(this.state.dropdownlist)\n    }\n\n     renderTableHeader() {\n         let header = ['Slicks Cold', 'Slicks Medium', 'Slicks Hot', 'Inters Intermediate', 'Rain DryWet', 'Rain HeavyWet'];\n         return header.map((key, index) => {\n             return <th bgcolor='#696969'\n                        style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                        key={index}>{key.toUpperCase()}</th>\n         })\n     }\n\n     renderTableOrderCat(){\n       return this.state.ButtonsList.map((buttons, index) => {\n            return (\n                <tr bgcolor='#696969' style={{textAlign: \"left\", padding: '8px', color: 'white', fontFamily: 'arial'}}\n                    key={'1Tabelle'}>\n                    <td>\n                    <label style={{fontSize: 16, fontFamily: 'arial', textAlign: 'center'}}> Ansicht: <select\n                    value={this.state.selectedView} onChange={this.changeView}>\n                    {optionTemplate}\n                    </select>\n                    </label>\n                    </td>\n                </tr>\n            )})\n     }\n\n\n        render() {\n       let optiondropdown1 = this.state.dropdownlist[0].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n       let optiondropdown2 = this.state.dropdownlist[1].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n       let optiondropdown3 = this.state.dropdownlist[2].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n       let optiondropdown4 = this.state.dropdownlist[3].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n       let optiondropdown5 = this.state.dropdownlist[4].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n       let optiondropdown6 = this.state.dropdownlist[5].map(v => (\n            <option value={v.id} key={v.id}>{v.name}</option>\n       ));\n        return (\n            <ScrollView >\n               <View>\n                   <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                   Neue Reifenbestellung anlegen\n                   </Text>\n               </View>\n\n                <Button\n                        title=\"zurück\"\n                        onPress={this.changeRace}\n                />\n\n            </ScrollView>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}