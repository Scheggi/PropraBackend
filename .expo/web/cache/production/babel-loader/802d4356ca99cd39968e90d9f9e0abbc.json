{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from\"react\";import Text from\"react-native-web/dist/exports/Text\";import ToastAndroid from\"react-native-web/dist/exports/ToastAndroid\";import View from\"react-native-web/dist/exports/View\";import{styles}from\"./styles\";import AsyncStorage from'@react-native-async-storage/async-storage';import{timeoutPromise,refreshToken,getRaceList}from\"./tools\";export var NavScreen=function(_React$Component){_inherits(NavScreen,_React$Component);var _super=_createSuper(NavScreen);function NavScreen(props){_classCallCheck(this,NavScreen);return _super.call(this,props);}_createClass(NavScreen,[{key:\"checkGroup\",value:function checkGroup(){var group;return _regeneratorRuntime.async(function checkGroup$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"usergroup\"));case 2:group=_context.sent;if(group===\"Helper\"){this.props.navigation.replace(\"Helper\");}if(group===\"Ingenieur\"){this.props.navigation.replace(\"Ingenieur\");}if(group===\"Manager\"){this.props.navigation.replace(\"Manager\");}case 6:case\"end\":return _context.stop();}}},null,this,null,Promise);}},{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;return _regeneratorRuntime.async(function componentDidMount$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:try{this.focusListener=this.props.navigation.addListener('didFocus',function(){_this.checkGroup();});}catch(e){ToastAndroid.show(e,ToastAndroid.SHORT);}case 1:case\"end\":return _context2.stop();}}},null,this,null,Promise);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.focusListener.remove();}},{key:\"render\",value:function render(){return React.createElement(View,{style:{flex:0.9,alignItems:'center',justifyContent:'center'}},React.createElement(Text,{style:{fontSize:30,fontWeight:'bold',textAlign:'center'}},\"Reifenmanagement\"));}}]);return NavScreen;}(React.Component);","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NavScreen.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","getRaceList","NavScreen","props","getItem","group","navigation","replace","focusListener","addListener","checkGroup","e","ToastAndroid","show","SHORT","remove","flex","alignItems","justifyContent","fontSize","fontWeight","textAlign","Component"],"mappings":"ikCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+KAEA,OAAQC,MAAR,gBACA,MAAOC,CAAAA,YAAP,KAAyB,2CAAzB,CACA,OAAQC,cAAR,CAAwBC,YAAxB,CAAqCC,WAArC,eAGA,UAAaC,CAAAA,SAAb,qGACI,mBAAYC,KAAZ,CAAmB,yDACTA,KADS,EAElB,CAHL,gDAKI,qMACwBL,YAAY,CAACM,OAAb,CAAqB,WAArB,CADxB,SACUC,KADV,eAEI,GAAIA,KAAK,GAAG,QAAZ,CAAqB,CACjB,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,OAAtB,CAA8B,QAA9B,EACH,CACD,GAAIF,KAAK,GAAG,WAAZ,CAAwB,CACpB,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,OAAtB,CAA8B,WAA9B,EACH,CACD,GAAIF,KAAK,GAAG,SAAZ,CAAsB,CAClB,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,OAAtB,CAA8B,SAA9B,EACH,CAVL,qEALJ,iCAkBI,0KACI,GAAI,CACE,KAAKC,aAAL,CAAqB,KAAKL,KAAL,CAAWG,UAAX,CAAsBG,WAAtB,CAAkC,UAAlC,CAA8C,UAAM,CACnE,KAAI,CAACC,UAAL,GACP,CAFsB,CAArB,CAIL,CAAC,MAAOC,CAAP,CAAU,CACJC,YAAY,CAACC,IAAb,CAAkBF,CAAlB,CAAqBC,YAAY,CAACE,KAAlC,EACP,CARL,sEAlBJ,oCA6BI,+BAAwB,CACpB,KAAKN,aAAL,CAAmBO,MAAnB,GACH,CA/BL,sBAiCI,iBAAS,CACL,MACI,qBAAC,IAAD,EAAM,KAAK,CAAE,CAACC,IAAI,CAAE,GAAP,CAAYC,UAAU,CAAE,QAAxB,CAAkCC,cAAc,CAAE,QAAlD,CAAb,EACI,oBAAC,IAAD,EAAM,KAAK,CAAE,CAACC,QAAQ,CAAE,EAAX,CAAeC,UAAU,CAAE,MAA3B,CAAmCC,SAAS,CAAE,QAA9C,CAAb,qBADJ,CADJ,CAOH,CAzCL,uBAA+BzB,KAAK,CAAC0B,SAArC","sourcesContent":["import React from \"react\";\nimport {Text, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken,getRaceList} from \"./tools\";\n\n\nexport class NavScreen extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async checkGroup(){\n        const group = await AsyncStorage.getItem(\"usergroup\");\n        if (group===\"Helper\"){\n            this.props.navigation.replace(\"Helper\")\n        }\n        if (group===\"Ingenieur\"){\n            this.props.navigation.replace(\"Ingenieur\")\n        }\n        if (group===\"Manager\"){\n            this.props.navigation.replace(\"Manager\")\n        }\n    }\n\n    async componentDidMount() {\n        try {\n              this.focusListener = this.props.navigation.addListener('didFocus', () => {\n                    this.checkGroup()\n            })\n\n        } catch (e) {\n                ToastAndroid.show(e, ToastAndroid.SHORT);\n        }\n\n    }\n    componentWillUnmount () {\n        this.focusListener.remove()\n    }\n\n    render() {\n        return (\n            <View style={{flex: 0.9, alignItems: 'center', justifyContent: 'center'}}>\n                <Text style={{fontSize: 30, fontWeight: 'bold', textAlign: 'center'}}>\n                    Reifenmanagement\n                </Text>\n            </View>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}