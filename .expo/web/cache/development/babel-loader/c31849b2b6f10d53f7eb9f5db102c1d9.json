{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"./styles\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timeoutPromise, refreshToken, syncData } from \"./tools\";\n\nvar NewRaceScreen = function (_React$Component) {\n  _inherits(NewRaceScreen, _React$Component);\n\n  var _super = _createSuper(NewRaceScreen);\n\n  function NewRaceScreen(props) {\n    var _this;\n\n    _classCallCheck(this, NewRaceScreen);\n\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.sendNewRaceRequest(_this.state.type, _this.state.place, _this.state.date);\n    };\n\n    _this.state = {\n      type: '',\n      place: '',\n      date: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewRaceScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return this.state.date.length > 0 && this.state.place.length > 0;\n    }\n  }, {\n    key: \"sendNewRaceRequest\",\n    value: function sendNewRaceRequest(type, place, date) {\n      var _this2 = this;\n\n      return _regeneratorRuntime.async(function sendNewRaceRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              timeoutPromise(2000, fetch('https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  type: type,\n                  place: place,\n                  date: date\n                })\n              })).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                if (data[1] == 200) {\n                  AsyncStorage.setItem(\"raceIDNewRace\", data[0].id);\n                  console.log(\"changeNav\");\n\n                  _this2.props.navigation.replace(\"Race\");\n\n                  return parseInt(data[0].id);\n                } else {\n                  console.log(\"failed\");\n                }\n              }).catch(function (error) {\n                console.log(error);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.viewStyles\n      }, React.createElement(Text, {\n        style: styles.textStyles\n      }, \"24 Stunden Rennen\"), React.createElement(Text, {\n        style: {\n          height: 60\n        }\n      }, \"Neues Rennen anlegen\"), React.createElement(View, null, React.createElement(Text, null, \"Ersten Tag des Rennen angeben im Format DD.MM.YYYY: \"), React.createElement(TextInput, {\n        style: {\n          height: 50\n        },\n        placeholder: \" DD.MM.YYYY\",\n        onChangeText: function onChangeText(text) {\n          return _this3.setState({\n            date: text\n          });\n        }\n      }), React.createElement(Text, null, \"Ort angeben: \"), React.createElement(TextInput, {\n        style: {\n          height: 50\n        },\n        placeholder: \" Ort\",\n        onChangeText: function onChangeText(place) {\n          return _this3.setState({\n            place: place\n          });\n        }\n      }), React.createElement(Text, null, \" Art des Rennens angeben: \"), React.createElement(TextInput, {\n        style: {\n          height: 50\n        },\n        placeholder: \" 24 Stunden Rennen\",\n        onChangeText: function onChangeText(type) {\n          return _this3.setState({\n            type: type\n          });\n        }\n      }), React.createElement(Button, {\n        disabled: !this.validateForm(),\n        title: \"Rennen anlegen\",\n        onPress: this.handleSubmit\n      })));\n    }\n  }]);\n\n  return NewRaceScreen;\n}(React.Component);\n\nexport { NewRaceScreen as default };","map":{"version":3,"sources":["/home/toni/PycharmProjects/PropraSource/frontend/NewRace.js"],"names":["React","styles","AsyncStorage","timeoutPromise","refreshToken","syncData","NewRaceScreen","props","handleSubmit","event","preventDefault","sendNewRaceRequest","state","type","place","date","length","fetch","method","headers","body","JSON","stringify","then","response","json","data","setItem","id","console","log","navigation","replace","parseInt","catch","error","viewStyles","textStyles","height","text","setState","validateForm","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button, Text, TextInput, ToastAndroid, View} from \"react-native\";\nimport {styles} from \"./styles\"\n//import { AsyncStorage } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport {timeoutPromise, refreshToken, syncData} from \"./tools\";\n\nexport default class NewRaceScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: '',\n            place: '',\n            date: '',\n        }\n    }\n\n\n    validateForm() {\n        return this.state.date.length > 0 && this.state.place.length >0;\n    }\n    handleSubmit = event => {\n        event.preventDefault();\n        this.sendNewRaceRequest(this.state.type,this.state.place,this.state.date);\n    }\n    async sendNewRaceRequest(type,place,date) {\n       timeoutPromise(2000, fetch(\n            'https://api.race24.cloud/race/create', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    type:type,\n                    place:place,\n                    date:date,\n                })\n            })\n            ).then(response => response.json()).then(data => {\n                if (data[1]==200) {\n                    AsyncStorage.setItem(\"raceIDNewRace\",data[0].id)\n                    console.log(\"changeNav\")\n                    this.props.navigation.replace(\"Race\");//replace('Race');\n                    return parseInt(data[0].id)\n                }\n                else {\n                    console.log(\"failed\")\n                }\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    render() {\n        return (\n            <View style={styles.viewStyles}>\n                <Text style={styles.textStyles}>\n                    24 Stunden Rennen\n                </Text>\n                 <Text style={{height:60}}>\n                    Neues Rennen anlegen\n                </Text>\n                <View >\n                    <Text >Ersten Tag des Rennen angeben im Format DD.MM.YYYY: </Text>\n                    <TextInput\n                        style={{height:50 }}\n                        placeholder=\" DD.MM.YYYY\"\n                        onChangeText={(text) => this.setState({date:text,})}\n                    />\n                    <Text>Ort angeben: </Text>\n                    <TextInput\n                        style={{height: 50}}\n                        placeholder=\" Ort\"\n                        onChangeText={(place) => this.setState({place:place})}\n                    />\n                    <Text> Art des Rennens angeben: </Text>\n                    <TextInput\n                        style={{height: 50}}\n                        placeholder=\" 24 Stunden Rennen\"\n                        onChangeText={(type) => this.setState({type:type})}\n                    />\n                    <Button\n                        disabled={!this.validateForm()}\n                        title=\"Rennen anlegen\"\n                        onPress={this.handleSubmit}\n                    />\n                </View>\n\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}